import fftUtils from './fftUtil'

if (console.log) {
    var old = console.log;
    let that = this;
    console.log = function() {
        worker.postMessage({
            code: 'console',
            content: JSON.stringify(arguments)
        });
        old.apply(this, arguments)
    }
}

console.log("worker init")

// 一维定位三基站
const beaconCluster1 = new fftUtils('beaconCluster1');
const beaconCluster2 = new fftUtils('beaconCluster2');
let settings1 = null;
let settings2 = null;

let allSettings = null;

// 一维定位
const beaconCluster1D = new fftUtils('beaconCluster1D');
let settings1D = null;

// 二维定位
const beaconCluster2D = new fftUtils('beaconCluster2D');
let settings2D = null;

// 体育馆定位
let frqDetect1 = new fftUtils('frqDetect1');
let frqDetect2 = new fftUtils('frqDetect2');
let frqDetect3 = new fftUtils('frqDetect3');

let frqDetectList = [frqDetect1, frqDetect2, frqDetect3];

// 三组声波频率的配置
let durationTime = 0.03;
let sampleFrq = 48000;
let vMaxTh = 0.8;
let vRatioTh = 0.3;
let maxRatioTh = 25;

// 单频检测存储
let SingleDetectList = []

let frequenceSetting1 = {
    vMaxTh: vMaxTh,
    vRatioTh: vRatioTh,
    pMaxTh: Math.floor(durationTime * sampleFrq) - 1,
    maxRatioTh: maxRatioTh,
    frequencyStart: 17000,
    frequencyEnd: 19000,
    durationTime: durationTime,
    timeInterval: 0.15,
}

let frequenceSetting2 = {
    vMaxTh: vMaxTh,
    vRatioTh: vRatioTh,
    pMaxTh: Math.floor(durationTime * sampleFrq) - 1,
    maxRatioTh: maxRatioTh,
    frequencyStart: 19000,
    frequencyEnd: 21000,
    durationTime: durationTime,
    timeInterval: 0.15,
}

let frequenceSetting3 = {
    vMaxTh: vMaxTh,
    vRatioTh: vRatioTh,
    pMaxTh: 2047,
    maxRatioTh: Math.floor(durationTime * sampleFrq) - 1,
    frequencyStart: 21000,
    frequencyEnd: 23000,
    durationTime: durationTime,
    timeInterval: 0.15,
}

let frequenceSettingList = [frequenceSetting1, frequenceSetting2, frequenceSetting3];

frqDetectList.forEach((detect, index) => {
    detect.updateSettings(frequenceSettingList[index]);
})

// 苏州定位
let frqDetect1_suzhou = new fftUtils('frqDetect1_suzhou');
let frqDetect2_suzhou = new fftUtils('frqDetect2_suzhou');
let frqDetect3_suzhou = new fftUtils('frqDetect3_suzhou');

let frqDetectList_suzhou = [frqDetect1_suzhou, frqDetect2_suzhou, frqDetect3_suzhou];

let frequenceSetting1_suzhou = {
    vMaxTh: vMaxTh,
    vRatioTh: vRatioTh,
    pMaxTh: Math.floor(durationTime * sampleFrq) - 1,
    maxRatioTh: maxRatioTh,
    frequencyStart: 17000,
    frequencyEnd: 19000,
    durationTime: durationTime,
    timeInterval: 0.15,
}

let frequenceSetting2_suzhou = {
    vMaxTh: vMaxTh,
    vRatioTh: vRatioTh,
    pMaxTh: Math.floor(durationTime * sampleFrq) - 1,
    maxRatioTh: maxRatioTh,
    frequencyStart: 19000,
    frequencyEnd: 21000,
    durationTime: durationTime,
    timeInterval: 0.15,
}

let frequenceSetting3_suzhou = {
    vMaxTh: vMaxTh,
    vRatioTh: vRatioTh,
    pMaxTh: Math.floor(durationTime * sampleFrq) - 1,
    maxRatioTh: maxRatioTh,
    frequencyStart: 21000,
    frequencyEnd: 23000,
    durationTime: durationTime,
    timeInterval: 0.15,  // 根据实际调整
    totalLength: 20,
}

let frequenceSettingList_suzhou = [frequenceSetting1_suzhou, frequenceSetting2_suzhou, frequenceSetting3_suzhou];

frqDetectList_suzhou.forEach((detect, index) => {
    detect.updateSettings(frequenceSettingList_suzhou[index]);
})

let locations1 = [
    [5, 18, 1.5],
    [0, 18, 1.5],
    [0, 0, 1.5],
    [10, 0, 1.5],
    [10, 18, 1.5],
]

let locations2 = [
    [15, 18, 1.5],
    [20, 18, 1.5],
    [20, 0, 1.5],
    [10, 0, 1.5],
    [10, 18, 1.5],
]

let locations3 = [
    [25, 18, 1.5],
    [20, 18, 1.5],
    [20, 0, 1.5],
    [30, 0, 1.5],
    [30, 18, 1.5],
]


let locationSettingList = [
    getLocationSetting(locations1),
    getLocationSetting(locations2),
    getLocationSetting(locations3),
];


let locationSettingList_suzhou = [];

// 滤波参数
// let signalFilterParameterList = [
//     [-2.8437e-08, 5.737e-09, -3.1406e-09, 2.0085e-08, -1.8403e-08, -3.1484e-08, 9.986e-08, -1.056e-07, -5.3309e-09, 1.7809e-07, -2.5837e-07, 1.18e-07, 1.9711e-07, -4.4584e-07, 3.6332e-07, 8.5565e-08, -5.974e-07, 7.1627e-07, -2.1963e-07, -6.0887e-07, 1.1068e-06, -7.4371e-07, -3.6401e-07, 1.4052e-06, -1.4443e-06, 2.2974e-07, 1.4367e-06, -2.1914e-06, 1.1974e-06, 1.0183e-06, -2.767e-06, 2.4554e-06, 1.3271e-08, -2.893e-06, 3.7874e-06, -1.6053e-06, -2.2883e-06, 4.8499e-06, -3.6988e-06, -7.4947e-07, 5.2176e-06, -5.9333e-06, 1.7599e-06, 4.4684e-06, -7.7937e-06, 5.0335e-06, 2.2986e-06, -8.6517e-06, 8.5856e-06, -1.3536e-06, -7.8874e-06, 1.1675e-05, -6.2062e-06, -5.0491e-06, 1.3401e-05, -1.1586e-05, -2.1418e-08, 1.2875e-05, -1.6465e-05, 6.8379e-06, 9.431e-06, -1.959e-05, 1.4636e-05, 2.8576e-06, -1.9713e-05, 2.1992e-05, -6.4251e-06, -1.5874e-05, 2.7213e-05, -1.728e-05, -7.698e-06, 2.8584e-05, -2.7909e-05, 4.3607e-06, 2.4747e-05, -3.6082e-05, 1.8908e-05, 1.5082e-05, -3.9504e-05, 3.3676e-05, 2.3123e-08, -3.6293e-05, 4.5796e-05, -1.8786e-05, -2.5475e-05, 5.2267e-05, -3.8563e-05, -7.3878e-06, 5.0549e-05, -5.5714e-05, 1.6106e-05, 3.9181e-05, -6.6402e-05, 4.1688e-05, 1.8301e-05, -6.728e-05, 6.4964e-05, -1.0069e-05, -5.6254e-05, 8.1144e-05, -4.208e-05, -3.3135e-05, 8.5924e-05, -7.2489e-05, -1.0908e-08, 7.6417e-05, -9.545e-05, 3.8777e-05, 5.1957e-05, -0.00010556, 7.7119e-05, 1.4581e-05, -9.8993e-05, 0.00010804, -3.0955e-05, -7.4432e-05, 0.00012494, -7.7696e-05, -3.3723e-05, 0.00012288, -0.00011752, 1.8071e-05, 9.9744e-05, -0.00014252, 7.322e-05, 5.7036e-05, -0.00014655, 0.00012246, -1.8515e-08, -0.00012656, 0.00015658, -6.3024e-05, -8.3544e-05, 0.00016814, -0.00012166, -2.2735e-05, 0.00015305, -0.00016542, 4.6952e-05, 0.00011166, -0.00018559, 0.00011427, 4.9044e-05, -0.00017697, 0.00016753, -2.5524e-05, -0.00013918, 0.00019679, -0.00010004, -7.7028e-05, 0.00019581, -0.00016184, 5.9278e-08, 0.00016343, -0.00019989, 7.9538e-05, 0.0001041, -0.00020703, 0.00014797, 2.7264e-05, -0.0001814, 0.00019353, -5.4226e-05, -0.00012708, 0.00020833, -0.00012646, -5.3433e-05, 0.00019002, -0.00017713, 2.6591e-05, 0.0001424, -0.00019797, 9.8917e-05, 7.4722e-05, -0.00018647, 0.00015116, -9.497e-08, -0.00014637, 0.00017514, -6.8127e-05, -8.6939e-05, 0.0001686, -0.00011735, -2.0965e-05, 0.00013563, -0.0001402, 3.8013e-05, 8.5755e-05, -0.00013526, 7.876e-05, 3.1723e-05, -0.0001075, 9.494e-05, -1.3477e-05, -6.7141e-05, 8.6643e-05, -3.9796e-05, -2.7133e-05, 6.0445e-05, -4.2716e-05, 1.0344e-07, 2.7856e-05, -2.4617e-05, 5.9965e-06, 2.4579e-06, 5.5113e-06, -1.1586e-05, -3.7161e-06, 3.4058e-05, -4.7192e-05, 1.6285e-05, 4.6174e-05, -8.8485e-05, 6.1745e-05, 2.9824e-05, -0.00011881, 0.00012338, -2.0381e-05, -0.0001212, 0.00018455, -0.00010057, -8.2993e-05, 0.00022449, -0.000197, -6.7246e-08, 0.00022308, -0.00028775, 0.00012048, 0.00016619, -0.00034686, 0.00025994, 5.0392e-05, -0.00034989, 0.00039033, -0.00011417, -0.00028018, 0.00047936, -0.00030358, -0.00013416, 0.00049706, -0.00048317, 7.5431e-05, 0.00042302, -0.00061332, 0.00031957, 0.00025249, -0.00065736, 0.00055648, -1.4545e-08, -0.00058979, 0.0007385, -0.00030071, -0.00040345, 0.00082112, -0.0006007, -0.00011361, 0.00077251, -0.0008438, 0.00024193, 0.00058174, -0.0009768, 0.00060749, 0.0002636, -0.00096041, 0.00091826, -0.00014116, -0.0007786, 0.0011118, -0.0005708, -0.00044428, 0.0011405, -0.00095218, 1.1989e-07, 0.00098204, -0.0012136, 0.00048787, 0.00064606, -0.0012986, 0.00093833, 0.00017522, -0.0011775, 0.0012709, -0.00036015, -0.00085565, 0.0014201, -0.00087308, -0.00037441, 0.0013488, -0.001275, 0.00019385, 0.0010567, -0.0014921, 0.00075744, 0.00058282, -0.0014794, 0.0012212, -2.0798e-07, -0.001231, 0.001504, -0.0005977, -0.00078224, 0.0015541, -0.0011098, -0.00020472, 0.0013596, -0.0014498, 0.00040583, 0.00095205, -0.0015603, 0.000947, 0.00040076, -0.0014248, 0.0013287, -0.00019926, -0.0010707, 0.0014901, -0.00074534, -0.00056478, 0.0014115, -0.0011466, 2.347e-07, 0.0011176, -0.0013416, 0.00052357, 0.00067231, -0.0013098, 0.0009165, 0.00016546, -0.001075, 0.0011199, -0.00030599, -0.00069951, 0.0011159, -0.00065822, -0.00027016, 0.00093011, -0.00083805, 0.00012118, 0.00062542, -0.00083382, 0.00039808, 0.00028651, -0.00067704, 0.0005168, -1.7365e-07, -0.0004341, 0.00047627, -0.00016746, -0.0001898, 0.0003182, -0.00018432, -2.5777e-05, 0.00011686, -6.4657e-05, 9.7421e-07, -3.958e-05, 0.00013458, -0.00012522, -7.2208e-05, 0.00032611, -0.0003713, 6.5989e-05, 0.00041375, -0.00065975, 0.00037362, 0.00031796, -0.00088441, 0.00079487, 3.2714e-08, -0.00093537, 0.0012264, -0.00052112, -0.00072766, 0.001537, -0.0011643, -0.00022764, 0.0015962, -0.0017956, 0.00052936, 0.0013076, -0.0022522, 0.0014353, 0.00063775, -0.0023764, 0.0023221, -0.00036445, -0.0020525, 0.0029895, -0.0015645, -0.0012411, 0.0032445, -0.0027574, 1.4339e-07, 0.0029446, -0.0037006, 0.0015123, 0.0020361, -0.0041586, 0.0030529, 0.00057944, -0.0039532, 0.0043329, -0.0012465, -0.003008, 0.0050682, -0.003163, -0.0013775, 0.0050363, -0.0048326, 0.00074543, 0.0041282, -0.005917, 0.0030492, 0.0023832, -0.0061418, 0.0051482, -2.8807e-07, -0.0053551, 0.0066465, -0.0026835, -0.0035708, 0.0072103, -0.0052349, -0.00098295, 0.0066361, -0.0071995, 0.0020506, 0.0049007, -0.0081792, 0.0050574, 0.0021827, -0.0079098, 0.0075242, -0.0011508, -0.0063205, 0.0089857, -0.0045937, -0.0035623, 0.00911, -0.0075787, 3.4028e-07, 0.0077679, -0.009572, 0.0038373, 0.0050709, -0.010169, 0.0073333, 0.0013679, -0.0091743, 0.0098887, -0.0027986, -0.0066465, 0.011024, -0.0067744, -0.0029063, 0.010468, -0.0098989, 0.001505, 0.0082189, -0.011618, 0.0059053, 0.004554, -0.011581, 0.0095811, -2.7216e-07, -0.0097142, 0.011906, -0.0047474, -0.0062409, 0.01245, -0.0089311, -0.0016576, 0.011059, -0.01186, 0.0033393, 0.0078914, -0.013023, 0.0079634, 0.0033998, -0.012186, 0.011467, -0.0017347, -0.0094291, 0.013264, -0.0067101, -0.0051503, 0.013035, -0.010734, 1.0369e-07, 0.010781, -0.013152, 0.0052201, 0.006831, -0.013564, 0.0096857, 0.0017897, -0.011885, 0.012687, -0.0035558, -0.0083657, 0.013743, -0.0083657, -0.0035558, 0.012687, -0.011885, 0.0017897, 0.0096857, -0.013564, 0.006831, 0.0052201, -0.013152, 0.010781, 1.0369e-07, -0.010734, 0.013035, -0.0051503, -0.0067101, 0.013264, -0.0094291, -0.0017347, 0.011467, -0.012186, 0.0033998, 0.0079634, -0.013023, 0.0078914, 0.0033393, -0.01186, 0.011059, -0.0016576, -0.0089311, 0.01245, -0.0062409, -0.0047474, 0.011906, -0.0097142, -2.7216e-07, 0.0095811, -0.011581, 0.004554, 0.0059053, -0.011618, 0.0082189, 0.001505, -0.0098989, 0.010468, -0.0029063, -0.0067744, 0.011024, -0.0066465, -0.0027986, 0.0098887, -0.0091743, 0.0013679, 0.0073333, -0.010169, 0.0050709, 0.0038373, -0.009572, 0.0077679, 3.4028e-07, -0.0075787, 0.00911, -0.0035623, -0.0045937, 0.0089857, -0.0063205, -0.0011508, 0.0075242, -0.0079098, 0.0021827, 0.0050574, -0.0081792, 0.0049007, 0.0020506, -0.0071995, 0.0066361, -0.00098295, -0.0052349, 0.0072103, -0.0035708, -0.0026835, 0.0066465, -0.0053551, -2.8807e-07, 0.0051482, -0.0061418, 0.0023832, 0.0030492, -0.005917, 0.0041282, 0.00074543, -0.0048326, 0.0050363, -0.0013775, -0.003163, 0.0050682, -0.003008, -0.0012465, 0.0043329, -0.0039532, 0.00057944, 0.0030529, -0.0041586, 0.0020361, 0.0015123, -0.0037006, 0.0029446, 1.4339e-07, -0.0027574, 0.0032445, -0.0012411, -0.0015645, 0.0029895, -0.0020525, -0.00036445, 0.0023221, -0.0023764, 0.00063775, 0.0014353, -0.0022522, 0.0013076, 0.00052936, -0.0017956, 0.0015962, -0.00022764, -0.0011643, 0.001537, -0.00072766, -0.00052112, 0.0012264, -0.00093537, 3.2714e-08, 0.00079487, -0.00088441, 0.00031796, 0.00037362, -0.00065975, 0.00041375, 6.5989e-05, -0.0003713, 0.00032611, -7.2208e-05, -0.00012522, 0.00013458, -3.958e-05, 9.7421e-07, -6.4657e-05, 0.00011686, -2.5777e-05, -0.00018432, 0.0003182, -0.0001898, -0.00016746, 0.00047627, -0.0004341, -1.7365e-07, 0.0005168, -0.00067704, 0.00028651, 0.00039808, -0.00083382, 0.00062542, 0.00012118, -0.00083805, 0.00093011, -0.00027016, -0.00065822, 0.0011159, -0.00069951, -0.00030599, 0.0011199, -0.001075, 0.00016546, 0.0009165, -0.0013098, 0.00067231, 0.00052357, -0.0013416, 0.0011176, 2.347e-07, -0.0011466, 0.0014115, -0.00056478, -0.00074534, 0.0014901, -0.0010707, -0.00019926, 0.0013287, -0.0014248, 0.00040076, 0.000947, -0.0015603, 0.00095205, 0.00040583, -0.0014498, 0.0013596, -0.00020472, -0.0011098, 0.0015541, -0.00078224, -0.0005977, 0.001504, -0.001231, -2.0798e-07, 0.0012212, -0.0014794, 0.00058282, 0.00075744, -0.0014921, 0.0010567, 0.00019385, -0.001275, 0.0013488, -0.00037441, -0.00087308, 0.0014201, -0.00085565, -0.00036015, 0.0012709, -0.0011775, 0.00017522, 0.00093833, -0.0012986, 0.00064606, 0.00048787, -0.0012136, 0.00098204, 1.1989e-07, -0.00095218, 0.0011405, -0.00044428, -0.0005708, 0.0011118, -0.0007786, -0.00014116, 0.00091826, -0.00096041, 0.0002636, 0.00060749, -0.0009768, 0.00058174, 0.00024193, -0.0008438, 0.00077251, -0.00011361, -0.0006007, 0.00082112, -0.00040345, -0.00030071, 0.0007385, -0.00058979, -1.4545e-08, 0.00055648, -0.00065736, 0.00025249, 0.00031957, -0.00061332, 0.00042302, 7.5431e-05, -0.00048317, 0.00049706, -0.00013416, -0.00030358, 0.00047936, -0.00028018, -0.00011417, 0.00039033, -0.00034989, 5.0392e-05, 0.00025994, -0.00034686, 0.00016619, 0.00012048, -0.00028775, 0.00022308, -6.7246e-08, -0.000197, 0.00022449, -8.2993e-05, -0.00010057, 0.00018455, -0.0001212, -2.0381e-05, 0.00012338, -0.00011881, 2.9824e-05, 6.1745e-05, -8.8485e-05, 4.6174e-05, 1.6285e-05, -4.7192e-05, 3.4058e-05, -3.7161e-06, -1.1586e-05, 5.5113e-06, 2.4579e-06, 5.9965e-06, -2.4617e-05, 2.7856e-05, 1.0344e-07, -4.2716e-05, 6.0445e-05, -2.7133e-05, -3.9796e-05, 8.6643e-05, -6.7141e-05, -1.3477e-05, 9.494e-05, -0.0001075, 3.1723e-05, 7.876e-05, -0.00013526, 8.5755e-05, 3.8013e-05, -0.0001402, 0.00013563, -2.0965e-05, -0.00011735, 0.0001686, -8.6939e-05, -6.8127e-05, 0.00017514, -0.00014637, -9.497e-08, 0.00015116, -0.00018647, 7.4722e-05, 9.8917e-05, -0.00019797, 0.0001424, 2.6591e-05, -0.00017713, 0.00019002, -5.3433e-05, -0.00012646, 0.00020833, -0.00012708, -5.4226e-05, 0.00019353, -0.0001814, 2.7264e-05, 0.00014797, -0.00020703, 0.0001041, 7.9538e-05, -0.00019989, 0.00016343, 5.9278e-08, -0.00016184, 0.00019581, -7.7028e-05, -0.00010004, 0.00019679, -0.00013918, -2.5524e-05, 0.00016753, -0.00017697, 4.9044e-05, 0.00011427, -0.00018559, 0.00011166, 4.6952e-05, -0.00016542, 0.00015305, -2.2735e-05, -0.00012166, 0.00016814, -8.3544e-05, -6.3024e-05, 0.00015658, -0.00012656, -1.8515e-08, 0.00012246, -0.00014655, 5.7036e-05, 7.322e-05, -0.00014252, 9.9744e-05, 1.8071e-05, -0.00011752, 0.00012288, -3.3723e-05, -7.7696e-05, 0.00012494, -7.4432e-05, -3.0955e-05, 0.00010804, -9.8993e-05, 1.4581e-05, 7.7119e-05, -0.00010556, 5.1957e-05, 3.8777e-05, -9.545e-05, 7.6417e-05, -1.0908e-08, -7.2489e-05, 8.5924e-05, -3.3135e-05, -4.208e-05, 8.1144e-05, -5.6254e-05, -1.0069e-05, 6.4964e-05, -6.728e-05, 1.8301e-05, 4.1688e-05, -6.6402e-05, 3.9181e-05, 1.6106e-05, -5.5714e-05, 5.0549e-05, -7.3878e-06, -3.8563e-05, 5.2267e-05, -2.5475e-05, -1.8786e-05, 4.5796e-05, -3.6293e-05, 2.3123e-08, 3.3676e-05, -3.9504e-05, 1.5082e-05, 1.8908e-05, -3.6082e-05, 2.4747e-05, 4.3607e-06, -2.7909e-05, 2.8584e-05, -7.698e-06, -1.728e-05, 2.7213e-05, -1.5874e-05, -6.4251e-06, 2.1992e-05, -1.9713e-05, 2.8576e-06, 1.4636e-05, -1.959e-05, 9.431e-06, 6.8379e-06, -1.6465e-05, 1.2875e-05, -2.1418e-08, -1.1586e-05, 1.3401e-05, -5.0491e-06, -6.2062e-06, 1.1675e-05, -7.8874e-06, -1.3536e-06, 8.5856e-06, -8.6517e-06, 2.2986e-06, 5.0335e-06, -7.7937e-06, 4.4684e-06, 1.7599e-06, -5.9333e-06, 5.2176e-06, -7.4947e-07, -3.6988e-06, 4.8499e-06, -2.2883e-06, -1.6053e-06, 3.7874e-06, -2.893e-06, 1.3271e-08, 2.4554e-06, -2.767e-06, 1.0183e-06, 1.1974e-06, -2.1914e-06, 1.4367e-06, 2.2974e-07, -1.4443e-06, 1.4052e-06, -3.6401e-07, -7.4371e-07, 1.1068e-06, -6.0887e-07, -2.1963e-07, 7.1627e-07, -5.974e-07, 8.5565e-08, 3.6332e-07, -4.4584e-07, 1.9711e-07, 1.18e-07, -2.5837e-07, 1.7809e-07, -5.3309e-09, -1.056e-07, 9.986e-08, -3.1484e-08, -1.8403e-08, 2.0085e-08, -3.1406e-09, 5.737e-09, -2.8437e-08],
//     [-3.2546e-08, 2.2741e-08, -3.6849e-09, -3.0415e-09, -1.6809e-08, 5.7146e-08, -8.9904e-08, 7.855e-08, -1.7148e-09, -1.2563e-07, 2.4763e-07, -2.8742e-07, 1.8642e-07, 5.456e-08, -3.5584e-07, 5.7804e-07, -5.799e-07, 2.9334e-07, 2.2023e-07, -7.6702e-07, 1.0858e-06, -9.6309e-07, 3.5156e-07, 5.6833e-07, -1.4259e-06, 1.7999e-06, -1.4117e-06, 2.8839e-07, 1.1894e-06, -2.4007e-06, 2.7331e-06, -1.8725e-06, 4.0209e-09, 2.1878e-06, -3.7529e-06, 3.8725e-06, -2.2587e-06, -6.2816e-07, 3.6752e-06, -5.5272e-06, 5.1709e-06, -2.4461e-06, -1.7583e-06, 5.7609e-06, -7.7398e-06, 6.5376e-06, -2.2713e-06, -3.553e-06, 8.5397e-06, -1.0366e-05, 7.8321e-06, -1.5345e-06, -6.1847e-06, 1.2077e-05, -1.3328e-05, 8.8605e-06, -6.217e-09, -9.817e-06, 1.6393e-05, -1.6485e-05, 9.3759e-06, 2.5613e-06, -1.4586e-05, 2.1445e-05, -1.9627e-05, 9.0841e-06, 6.417e-06, -2.0583e-05, 2.7115e-05, -2.2469e-05, 7.6555e-06, 1.1791e-05, -2.7828e-05, 3.3197e-05, -2.4659e-05, 4.743e-06, 1.8867e-05, -3.6253e-05, 3.9389e-05, -2.5786e-05, 6.3288e-09, 2.7761e-05, -4.5684e-05, 4.5295e-05, -2.5399e-05, -6.8588e-06, 3.8486e-05, -5.583e-05, 5.0431e-05, -2.3036e-05, -1.6087e-05, 5.0935e-05, -6.6271e-05, 5.4247e-05, -1.8254e-05, -2.7811e-05, 6.4855e-05, -7.6472e-05, 5.6151e-05, -1.0669e-05, -4.2022e-05, 7.984e-05, -8.5792e-05, 5.5548e-05, -2.2529e-09, -5.8549e-05, 9.5324e-05, -9.3513e-05, 5.1886e-05, 1.388e-05, -7.703e-05, 0.0001106, -9.8881e-05, 4.4705e-05, 3.0924e-05, -9.6905e-05, 0.00012482, -0.00010116, 3.3695e-05, 5.0856e-05, -0.00011742, 0.00013709, -9.9671e-05, 1.8745e-05, 7.3162e-05, -0.00013764, 0.00014646, -9.39e-05, -6.7643e-09, 9.7076e-05, -0.0001565, 0.00015202, -8.3521e-05, -2.2137e-05, 0.0001216, -0.00017286, 0.00015301, -6.8485e-05, -4.6917e-05, 0.00014553, -0.00018555, 0.00014884, -4.9064e-05, -7.3316e-05, 0.0001675, -0.00019351, 0.0001392, -2.5892e-05, -0.00010002, 0.00018611, -0.00019585, 0.00012416, 1.8732e-08, -0.00012548, 0.00019994, -0.00019193, 0.00010418, 2.7288e-05, -0.000148, 0.00020773, -0.00018152, 8.0172e-05, 5.4206e-05, -0.00016581, 0.00020846, -0.00016482, 5.3527e-05, 7.8807e-05, -0.00017725, 0.00020151, -0.00014257, 2.6062e-05, 9.8967e-05, -0.00018081, 0.00018671, -0.00011607, -2.8631e-08, 0.00011254, -0.00017538, 0.0001645, -8.7142e-05, -2.2267e-05, 0.00011751, -0.00016032, 0.00013595, -5.8156e-05, -3.8032e-05, 0.00011216, -0.00013562, 0.00010281, -3.1893e-05, -4.4724e-05, 9.5252e-05, -0.00010198, 6.7493e-05, -1.1431e-05, -3.9952e-05, 6.6165e-05, -6.0907e-05, 3.299e-05, 2.9947e-08, -2.1742e-05, 2.5075e-05, -1.4704e-05, 2.7758e-06, -6.2768e-07, 1.1263e-05, -2.6955e-05, 3.3554e-05, -1.9377e-05, -1.6206e-05, 5.9614e-05, -8.7913e-05, 8.0117e-05, -2.9612e-05, -4.895e-05, 0.0001229, -0.00015484, 0.00012073, -2.4239e-05, -0.00010031, 0.00019962, -0.00022387, 0.00015082, -1.7811e-08, -0.00017074, 0.00028715, -0.00029041, 0.00016583, 4.5566e-05, -0.0002595, 0.00038176, -0.00034931, 0.00016145, 0.00011403, -0.00036458, 0.00047871, -0.00039515, 0.00013398, 0.00020564, -0.00048262, 0.00057242, -0.00042257, 8.0662e-05, 0.00031926, -0.00060899, 0.00065676, -0.00042662, -7.5865e-09, 0.00045221, -0.00073792, 0.00072537, -0.00040317, -0.00010804, 0.00060029, -0.00086277, 0.00077205, -0.00034928, -0.00024176, 0.00075781, -0.00097629, 0.00079122, -0.00026352, -0.00039767, 0.00091784, -0.0010711, 0.00077834, -0.00014629, -0.00057054, 0.0010725, -0.0011402, 0.00073033, 3.9241e-08, -0.00075344, 0.0012133, -0.0011772, 0.000646, 0.00017097, -0.0009381, 0.0013318, -0.0011774, 0.00052629, 0.00036, -0.0011152, 0.00142, -0.0011375, 0.00037451, 0.00055876, -0.0012749, 0.001471, -0.0010568, 0.00019638, 0.00075735, -0.0014076, 0.0014796, -0.00093701, -6.4767e-08, 0.00094486, -0.0015042, 0.0014427, -0.0007825, -0.0002047, 0.0011099, -0.0015571, 0.00136, -0.00060055, -0.00040578, 0.0012414, -0.0015607, 0.0012343, -0.00040105, -0.00059046, 0.0013291, -0.0015124, 0.0010713, -0.00019618, -0.00074552, 0.0013647, -0.0014122, 0.00088012, 7.1117e-08, -0.0008582, 0.0013423, -0.0012642, 0.00067287, 0.00017262, -0.00091702, 0.0012594, -0.0010759, 0.00046417, 0.0003061, -0.00091269, 0.0011169, -0.00085838, 0.00027058, 0.00038577, -0.00083894, 0.00092005, -0.00062633, 0.00010987, 0.00039855, -0.00069326, 0.00067825, -0.00039718, -5.0825e-08, 0.00033399, -0.00047748, 0.00040512, -0.00019055, -4.2111e-05, 0.0001852, -0.00019819, 0.00011808, -2.7253e-05, -1.2469e-06, -5.0337e-05, 0.00013318, -0.0001622, 7.1773e-05, 0.0001345, -0.0003701, 0.00050042, -0.00041269, 8.6688e-05, 0.00037294, -0.00076616, 0.00088301, -0.00060907, 6.7901e-09, 0.00071684, -0.001225, 0.0012568, -0.00072694, -0.00020216, 0.0011633, -0.0017278, 0.001595, -0.0007432, -0.00052897, 0.0017031, -0.0022509, 0.0018694, -0.00063745, -0.00098386, 0.0023209, -0.0027663, 0.0020517, -0.00039337, -0.0015638, 0.0029953, -0.0032433, 0.002115, 4.7136e-08, -0.0022588, 0.0036994, -0.0036495, 0.0020357, 0.00054741, -0.003052, 0.0044017, -0.0039524, 0.0017943, 0.0012461, -0.0039196, 0.0050673, -0.0041211, 0.0013774, 0.0020859, -0.0048318, 0.0056594, -0.0041278, 0.00077882, 0.0030487, -0.0057535, 0.0061413, -0.0039498, -9.0771e-08, 0.0041091, -0.006646, 0.0064774, -0.0035708, -0.00094932, 0.0052345, -0.0074683, 0.006636, -0.0029819, -0.0020504, 0.006387, -0.0081791, 0.0065904, -0.002183, -0.0032765, 0.0075242, -0.0087385, 0.0063208, -0.0011829, -0.0045936, 0.0086012, -0.0091103, 0.0058153, 1.0583e-07, -0.0059611, 0.0095724, -0.0092637, 0.0050714, 0.001339, -0.0073336, 0.010394, -0.009175, 0.0040962, 0.0027985, -0.0086629, 0.011025, -0.0088289, 0.0029067, 0.0043366, -0.0098997, 0.01143, -0.0082198, 0.0015295, 0.0059057, -0.010996, 0.011582, -0.0073524, -8.4148e-08, 0.0074549, -0.011907, 0.011462, -0.0062417, -0.0016393, 0.008932, -0.012594, 0.01106, -0.0049129, -0.0033395, 0.010286, -0.013025, 0.010379, -0.0034003, -0.0050481, 0.011468, -0.013177, 0.0094304, -0.0017464, -0.0067109, 0.012436, -0.013037, 0.0082371, 3.1981e-08, -0.0082741, 0.013154, -0.012604, 0.0068319, 0.001786, -0.009687, 0.013596, -0.011886, 0.0052557, 0.0035562, -0.010904, 0.013745, -0.010904, 0.0035562, 0.0052557, -0.011886, 0.013596, -0.009687, 0.001786, 0.0068319, -0.012604, 0.013154, -0.0082741, 3.1981e-08, 0.0082371, -0.013037, 0.012436, -0.0067109, -0.0017464, 0.0094304, -0.013177, 0.011468, -0.0050481, -0.0034003, 0.010379, -0.013025, 0.010286, -0.0033395, -0.0049129, 0.01106, -0.012594, 0.008932, -0.0016393, -0.0062417, 0.011462, -0.011907, 0.0074549, -8.4148e-08, -0.0073524, 0.011582, -0.010996, 0.0059057, 0.0015295, -0.0082198, 0.01143, -0.0098997, 0.0043366, 0.0029067, -0.0088289, 0.011025, -0.0086629, 0.0027985, 0.0040962, -0.009175, 0.010394, -0.0073336, 0.001339, 0.0050714, -0.0092637, 0.0095724, -0.0059611, 1.0583e-07, 0.0058153, -0.0091103, 0.0086012, -0.0045936, -0.0011829, 0.0063208, -0.0087385, 0.0075242, -0.0032765, -0.002183, 0.0065904, -0.0081791, 0.006387, -0.0020504, -0.0029819, 0.006636, -0.0074683, 0.0052345, -0.00094932, -0.0035708, 0.0064774, -0.006646, 0.0041091, -9.0771e-08, -0.0039498, 0.0061413, -0.0057535, 0.0030487, 0.00077882, -0.0041278, 0.0056594, -0.0048318, 0.0020859, 0.0013774, -0.0041211, 0.0050673, -0.0039196, 0.0012461, 0.0017943, -0.0039524, 0.0044017, -0.003052, 0.00054741, 0.0020357, -0.0036495, 0.0036994, -0.0022588, 4.7136e-08, 0.002115, -0.0032433, 0.0029953, -0.0015638, -0.00039337, 0.0020517, -0.0027663, 0.0023209, -0.00098386, -0.00063745, 0.0018694, -0.0022509, 0.0017031, -0.00052897, -0.0007432, 0.001595, -0.0017278, 0.0011633, -0.00020216, -0.00072694, 0.0012568, -0.001225, 0.00071684, 6.7901e-09, -0.00060907, 0.00088301, -0.00076616, 0.00037294, 8.6688e-05, -0.00041269, 0.00050042, -0.0003701, 0.0001345, 7.1773e-05, -0.0001622, 0.00013318, -5.0337e-05, -1.2469e-06, -2.7253e-05, 0.00011808, -0.00019819, 0.0001852, -4.2111e-05, -0.00019055, 0.00040512, -0.00047748, 0.00033399, -5.0825e-08, -0.00039718, 0.00067825, -0.00069326, 0.00039855, 0.00010987, -0.00062633, 0.00092005, -0.00083894, 0.00038577, 0.00027058, -0.00085838, 0.0011169, -0.00091269, 0.0003061, 0.00046417, -0.0010759, 0.0012594, -0.00091702, 0.00017262, 0.00067287, -0.0012642, 0.0013423, -0.0008582, 7.1117e-08, 0.00088012, -0.0014122, 0.0013647, -0.00074552, -0.00019618, 0.0010713, -0.0015124, 0.0013291, -0.00059046, -0.00040105, 0.0012343, -0.0015607, 0.0012414, -0.00040578, -0.00060055, 0.00136, -0.0015571, 0.0011099, -0.0002047, -0.0007825, 0.0014427, -0.0015042, 0.00094486, -6.4767e-08, -0.00093701, 0.0014796, -0.0014076, 0.00075735, 0.00019638, -0.0010568, 0.001471, -0.0012749, 0.00055876, 0.00037451, -0.0011375, 0.00142, -0.0011152, 0.00036, 0.00052629, -0.0011774, 0.0013318, -0.0009381, 0.00017097, 0.000646, -0.0011772, 0.0012133, -0.00075344, 3.9241e-08, 0.00073033, -0.0011402, 0.0010725, -0.00057054, -0.00014629, 0.00077834, -0.0010711, 0.00091784, -0.00039767, -0.00026352, 0.00079122, -0.00097629, 0.00075781, -0.00024176, -0.00034928, 0.00077205, -0.00086277, 0.00060029, -0.00010804, -0.00040317, 0.00072537, -0.00073792, 0.00045221, -7.5865e-09, -0.00042662, 0.00065676, -0.00060899, 0.00031926, 8.0662e-05, -0.00042257, 0.00057242, -0.00048262, 0.00020564, 0.00013398, -0.00039515, 0.00047871, -0.00036458, 0.00011403, 0.00016145, -0.00034931, 0.00038176, -0.0002595, 4.5566e-05, 0.00016583, -0.00029041, 0.00028715, -0.00017074, -1.7811e-08, 0.00015082, -0.00022387, 0.00019962, -0.00010031, -2.4239e-05, 0.00012073, -0.00015484, 0.0001229, -4.895e-05, -2.9612e-05, 8.0117e-05, -8.7913e-05, 5.9614e-05, -1.6206e-05, -1.9377e-05, 3.3554e-05, -2.6955e-05, 1.1263e-05, -6.2768e-07, 2.7758e-06, -1.4704e-05, 2.5075e-05, -2.1742e-05, 2.9947e-08, 3.299e-05, -6.0907e-05, 6.6165e-05, -3.9952e-05, -1.1431e-05, 6.7493e-05, -0.00010198, 9.5252e-05, -4.4724e-05, -3.1893e-05, 0.00010281, -0.00013562, 0.00011216, -3.8032e-05, -5.8156e-05, 0.00013595, -0.00016032, 0.00011751, -2.2267e-05, -8.7142e-05, 0.0001645, -0.00017538, 0.00011254, -2.8631e-08, -0.00011607, 0.00018671, -0.00018081, 9.8967e-05, 2.6062e-05, -0.00014257, 0.00020151, -0.00017725, 7.8807e-05, 5.3527e-05, -0.00016482, 0.00020846, -0.00016581, 5.4206e-05, 8.0172e-05, -0.00018152, 0.00020773, -0.000148, 2.7288e-05, 0.00010418, -0.00019193, 0.00019994, -0.00012548, 1.8732e-08, 0.00012416, -0.00019585, 0.00018611, -0.00010002, -2.5892e-05, 0.0001392, -0.00019351, 0.0001675, -7.3316e-05, -4.9064e-05, 0.00014884, -0.00018555, 0.00014553, -4.6917e-05, -6.8485e-05, 0.00015301, -0.00017286, 0.0001216, -2.2137e-05, -8.3521e-05, 0.00015202, -0.0001565, 9.7076e-05, -6.7643e-09, -9.39e-05, 0.00014646, -0.00013764, 7.3162e-05, 1.8745e-05, -9.9671e-05, 0.00013709, -0.00011742, 5.0856e-05, 3.3695e-05, -0.00010116, 0.00012482, -9.6905e-05, 3.0924e-05, 4.4705e-05, -9.8881e-05, 0.0001106, -7.703e-05, 1.388e-05, 5.1886e-05, -9.3513e-05, 9.5324e-05, -5.8549e-05, -2.2529e-09, 5.5548e-05, -8.5792e-05, 7.984e-05, -4.2022e-05, -1.0669e-05, 5.6151e-05, -7.6472e-05, 6.4855e-05, -2.7811e-05, -1.8254e-05, 5.4247e-05, -6.6271e-05, 5.0935e-05, -1.6087e-05, -2.3036e-05, 5.0431e-05, -5.583e-05, 3.8486e-05, -6.8588e-06, -2.5399e-05, 4.5295e-05, -4.5684e-05, 2.7761e-05, 6.3288e-09, -2.5786e-05, 3.9389e-05, -3.6253e-05, 1.8867e-05, 4.743e-06, -2.4659e-05, 3.3197e-05, -2.7828e-05, 1.1791e-05, 7.6555e-06, -2.2469e-05, 2.7115e-05, -2.0583e-05, 6.417e-06, 9.0841e-06, -1.9627e-05, 2.1445e-05, -1.4586e-05, 2.5613e-06, 9.3759e-06, -1.6485e-05, 1.6393e-05, -9.817e-06, -6.217e-09, 8.8605e-06, -1.3328e-05, 1.2077e-05, -6.1847e-06, -1.5345e-06, 7.8321e-06, -1.0366e-05, 8.5397e-06, -3.553e-06, -2.2713e-06, 6.5376e-06, -7.7398e-06, 5.7609e-06, -1.7583e-06, -2.4461e-06, 5.1709e-06, -5.5272e-06, 3.6752e-06, -6.2816e-07, -2.2587e-06, 3.8725e-06, -3.7529e-06, 2.1878e-06, 4.0209e-09, -1.8725e-06, 2.7331e-06, -2.4007e-06, 1.1894e-06, 2.8839e-07, -1.4117e-06, 1.7999e-06, -1.4259e-06, 5.6833e-07, 3.5156e-07, -9.6309e-07, 1.0858e-06, -7.6702e-07, 2.2023e-07, 2.9334e-07, -5.799e-07, 5.7804e-07, -3.5584e-07, 5.456e-08, 1.8642e-07, -2.8742e-07, 2.4763e-07, -1.2563e-07, -1.7148e-09, 7.855e-08, -8.9904e-08, 5.7146e-08, -1.6809e-08, -3.0415e-09, -3.6849e-09, 2.2741e-08, -3.2546e-08],
//     [-6.0567e-09, 1.0574e-08, -1.0165e-09, -2.1195e-08, 4.9794e-08, -7.444e-08, 8.2764e-08, -6.3435e-08, 9.6472e-09, 7.7751e-08, -1.8834e-07, 3.0212e-07, -3.9192e-07, 4.2799e-07, -3.8437e-07, 2.4584e-07, -1.4014e-08, -2.8885e-07, 6.1975e-07, -9.1923e-07, 1.12e-06, -1.1592e-06, 9.9174e-07, -6.0323e-07, 1.9036e-08, 6.9282e-07, -1.4266e-06, 2.0519e-06, -2.4338e-06, 2.4577e-06, -2.0537e-06, 1.2182e-06, -2.4503e-08, -1.3768e-06, 2.7733e-06, -3.9197e-06, 4.5759e-06, -4.5521e-06, 3.7489e-06, -2.1889e-06, 3.0109e-08, 2.4431e-06, -4.8519e-06, 6.7771e-06, -7.8259e-06, 7.7041e-06, -6.2798e-06, 3.6263e-06, -3.5454e-08, -4.0056e-06, 7.8744e-06, -1.0903e-05, 1.2488e-05, -1.2196e-05, 9.8636e-06, -5.648e-06, 4.0062e-08, 6.1836e-06, -1.2061e-05, 1.6585e-05, -1.8871e-05, 1.8314e-05, -1.4718e-05, 8.3708e-06, -4.3394e-08, -9.0931e-06, 1.7623e-05, -2.4096e-05, 2.7269e-05, -2.6322e-05, 2.1042e-05, -1.19e-05, 4.4882e-08, 1.2836e-05, -2.4742e-05, 3.3667e-05, -3.7921e-05, 3.6436e-05, -2.8992e-05, 1.6317e-05, -4.396e-08, -1.7485e-05, 3.3547e-05, -4.5452e-05, 5.0981e-05, -4.8784e-05, 3.8658e-05, -2.1663e-05, 4.0111e-08, 2.3072e-05, -4.4081e-05, 5.9491e-05, -6.6476e-05, 6.3372e-05, -5.0029e-05, 2.7925e-05, -3.2911e-08, -2.9567e-05, 5.6274e-05, -7.5674e-05, 8.426e-05, -8.0044e-05, 6.2969e-05, -3.5019e-05, 2.2075e-08, 3.6867e-05, -6.9915e-05, 9.3696e-05, -0.00010397, 9.8441e-05, -7.7181e-05, 4.2773e-05, -7.5012e-09, -4.4775e-05, 8.4617e-05, -0.00011302, 0.00012501, -0.00011797, 9.2186e-05, -5.0914e-05, -1.0688e-08, 5.2992e-05, -9.9802e-05, 0.00013286, -0.00014647, 0.00013777, -0.0001073, 5.9058e-05, 3.2122e-08, -6.1103e-05, 0.00011468, -0.00015215, 0.00016717, -0.0001567, 0.00012163, -6.6705e-05, -5.6159e-08, 6.8579e-05, -0.00012824, 0.00016954, -0.0001856, 0.00017335, -0.00013405, 7.324e-05, 8.1894e-08, -7.4775e-05, 0.00013928, -0.0001834, 0.00019998, -0.00018603, 0.00014327, -7.7941e-05, -1.0817e-07, 7.8943e-05, -0.00014638, 0.00019189, -0.00020827, 0.00019283, -0.00014779, 7.9999e-05, 1.3361e-07, -8.0251e-05, 0.000148, -0.00019294, 0.00020824, -0.00019168, 0.00014602, -7.8541e-05, -1.567e-07, 7.7816e-05, -0.00014249, 0.00018443, -0.00019755, 0.00018042, -0.00013631, 7.2672e-05, 1.7581e-07, -7.074e-05, 0.00012821, -0.00016418, 0.00017388, -0.00015689, 0.00011702, -6.1517e-05, -1.8933e-07, 5.8158e-05, -0.00010357, 0.00013015, -0.00013504, 0.00011913, -8.665e-05, 4.4277e-05, 1.9574e-07, -3.9297e-05, 6.7183e-05, -8.0572e-05, 7.9157e-05, -6.5424e-05, 4.3945e-05, -2.0292e-05, -1.9372e-07, 1.3539e-05, -1.7938e-05, 1.4059e-05, -4.7995e-06, -5.4681e-06, 1.2e-05, -1.0897e-05, 1.8225e-07, 1.9516e-05, -4.4838e-05, 7.0191e-05, -8.8808e-05, 9.4181e-05, -8.16e-05, 4.9477e-05, -1.607e-07, -5.9978e-05, 0.00012127, -0.00017224, 0.00020163, -0.00020057, 0.00016467, -9.5302e-05, 1.2891e-07, 0.00010761, -0.00021083, 0.00029129, -0.00033264, 0.00032359, -0.0002603, 0.00014783, -8.7271e-08, -0.00016175, 0.00031221, -0.00042548, 0.00047972, -0.00046111, 0.00036676, -0.00020606, 3.672e-08, 0.0002213, -0.00042325, 0.00057185, -0.00063949, 0.00060988, -0.00048146, 0.00026854, 2.1221e-08, -0.00028465, 0.00054087, -0.00072623, 0.00080727, -0.00076543, 0.00060085, -0.00033327, -8.4495e-08, 0.0003497, -0.00066108, 0.00088325, -0.00097708, 0.00092207, -0.00072046, 0.00039779, 1.5056e-07, -0.00041385, 0.00077895, -0.0010363, 0.0011416, -0.0010729, 0.00083494, -0.00045914, -2.1651e-07, 0.00047401, -0.00088869, 0.0011778, -0.0012925, 0.0012101, -0.00093812, 0.00051393, 2.7916e-07, -0.0005267, 0.00098378, -0.0012989, 0.0014202, -0.0013247, 0.0010232, -0.00055842, -3.3522e-07, 0.00056811, -0.0010571, 0.0013905, -0.0015145, 0.0014073, -0.0010827, 0.00058863, 3.815e-07, -0.00059418, 0.0011012, -0.0014425, 0.0015647, -0.0014479, 0.0011092, -0.00060041, -4.15e-07, 0.00060077, -0.0011083, 0.0014451, -0.00156, 0.0014365, -0.001095, 0.00058967, 4.3317e-07, -0.0005838, 0.0010709, -0.0013884, 0.0014899, -0.0013635, 0.0010327, -0.00055246, -4.3402e-07, 0.00053938, -0.00098206, 0.0012632, -0.0013445, 0.0012199, -0.00091568, 0.00048516, 4.1629e-07, -0.00046403, 0.0008353, -0.0010615, 0.0011153, -0.00099798, 0.00073795, -0.0003847, -3.7956e-07, 0.00035479, -0.00062536, 0.0007765, -0.00079515, 0.00069136, -0.00049493, 0.00024866, 3.2431e-07, -0.00020946, 0.00034833, -0.00040337, 0.00037913, -0.00029574, 0.0001835, -7.5447e-05, -2.5195e-07, 2.6691e-05, -1.9538e-06, -6.0562e-05, 0.00013536, -0.00019097, 0.00019771, -0.00013553, 1.648e-07, 0.00019387, -0.00041416, 0.00061549, -0.00074815, 0.00076828, -0.00064806, 0.00038381, -6.6033e-08, -0.00045144, 0.00089834, -0.0012589, 0.0014561, -0.001433, 0.0011648, -0.00066774, -4.0483e-08, 0.00074409, -0.0014467, 0.0019853, -0.002253, 0.0021789, -0.001743, 0.00098451, 1.5031e-07, -0.0010687, 0.0020532, -0.0027865, 0.0031295, -0.002997, 0.0023755, -0.0013301, -2.5866e-07, 0.0014209, -0.0027096, 0.0036513, -0.0040731, 0.0038756, -0.0030529, 0.0016993, 3.6063e-07, -0.0017953, 0.0034056, -0.0045659, 0.0050687, -0.0048002, 0.0037641, -0.0020859, -4.5143e-07, 0.0021853, -0.004129, 0.0055143, -0.0060984, 0.0057542, -0.004496, 0.0024829, 5.2663e-07, -0.0025838, 0.0048661, -0.0064782, 0.0071423, -0.006719, 0.0052344, -0.0028823, -5.8241e-07, 0.0029826, -0.005602, 0.0074381, -0.0081792, 0.0076746, -0.0059638, 0.0032758, 6.1573e-07, -0.0033734, 0.0063211, -0.0083734, 0.0091866, -0.0086005, 0.0066685, -0.0036549, -6.2455e-07, 0.0037475, -0.0070074, 0.0092633, -0.010142, 0.0094757, -0.0073324, 0.0040109, 6.0793e-07, -0.0040964, 0.0076451, -0.010087, 0.011023, -0.01028, 0.0079401, -0.0043354, -5.6608e-07, 0.0044117, -0.0082191, 0.010825, -0.011809, 0.010994, -0.0084771, 0.0046207, 5.0041e-07, -0.004686, 0.0087155, -0.01146, 0.012481, -0.011601, 0.0089301, -0.0048598, -4.1346e-07, 0.0049124, -0.0091221, 0.011976, -0.013022, 0.012084, -0.009288, 0.0050468, 3.0878e-07, -0.0050853, 0.0094288, -0.012359, 0.013419, -0.012433, 0.0095417, -0.0051769, -1.9078e-07, 0.0052004, -0.0096277, 0.012601, -0.013661, 0.012639, -0.0096849, 0.0052467, 6.4528e-08, -0.0052546, 0.0097138, -0.012695, 0.013742, -0.012695, 0.0097138, -0.0052546, 6.4528e-08, 0.0052467, -0.0096849, 0.012639, -0.013661, 0.012601, -0.0096277, 0.0052004, -1.9078e-07, -0.0051769, 0.0095417, -0.012433, 0.013419, -0.012359, 0.0094288, -0.0050853, 3.0878e-07, 0.0050468, -0.009288, 0.012084, -0.013022, 0.011976, -0.0091221, 0.0049124, -4.1346e-07, -0.0048598, 0.0089301, -0.011601, 0.012481, -0.01146, 0.0087155, -0.004686, 5.0041e-07, 0.0046207, -0.0084771, 0.010994, -0.011809, 0.010825, -0.0082191, 0.0044117, -5.6608e-07, -0.0043354, 0.0079401, -0.01028, 0.011023, -0.010087, 0.0076451, -0.0040964, 6.0793e-07, 0.0040109, -0.0073324, 0.0094757, -0.010142, 0.0092633, -0.0070074, 0.0037475, -6.2455e-07, -0.0036549, 0.0066685, -0.0086005, 0.0091866, -0.0083734, 0.0063211, -0.0033734, 6.1573e-07, 0.0032758, -0.0059638, 0.0076746, -0.0081792, 0.0074381, -0.005602, 0.0029826, -5.8241e-07, -0.0028823, 0.0052344, -0.006719, 0.0071423, -0.0064782, 0.0048661, -0.0025838, 5.2663e-07, 0.0024829, -0.004496, 0.0057542, -0.0060984, 0.0055143, -0.004129, 0.0021853, -4.5143e-07, -0.0020859, 0.0037641, -0.0048002, 0.0050687, -0.0045659, 0.0034056, -0.0017953, 3.6063e-07, 0.0016993, -0.0030529, 0.0038756, -0.0040731, 0.0036513, -0.0027096, 0.0014209, -2.5866e-07, -0.0013301, 0.0023755, -0.002997, 0.0031295, -0.0027865, 0.0020532, -0.0010687, 1.5031e-07, 0.00098451, -0.001743, 0.0021789, -0.002253, 0.0019853, -0.0014467, 0.00074409, -4.0483e-08, -0.00066774, 0.0011648, -0.001433, 0.0014561, -0.0012589, 0.00089834, -0.00045144, -6.6033e-08, 0.00038381, -0.00064806, 0.00076828, -0.00074815, 0.00061549, -0.00041416, 0.00019387, 1.648e-07, -0.00013553, 0.00019771, -0.00019097, 0.00013536, -6.0562e-05, -1.9538e-06, 2.6691e-05, -2.5195e-07, -7.5447e-05, 0.0001835, -0.00029574, 0.00037913, -0.00040337, 0.00034833, -0.00020946, 3.2431e-07, 0.00024866, -0.00049493, 0.00069136, -0.00079515, 0.0007765, -0.00062536, 0.00035479, -3.7956e-07, -0.0003847, 0.00073795, -0.00099798, 0.0011153, -0.0010615, 0.0008353, -0.00046403, 4.1629e-07, 0.00048516, -0.00091568, 0.0012199, -0.0013445, 0.0012632, -0.00098206, 0.00053938, -4.3402e-07, -0.00055246, 0.0010327, -0.0013635, 0.0014899, -0.0013884, 0.0010709, -0.0005838, 4.3317e-07, 0.00058967, -0.001095, 0.0014365, -0.00156, 0.0014451, -0.0011083, 0.00060077, -4.15e-07, -0.00060041, 0.0011092, -0.0014479, 0.0015647, -0.0014425, 0.0011012, -0.00059418, 3.815e-07, 0.00058863, -0.0010827, 0.0014073, -0.0015145, 0.0013905, -0.0010571, 0.00056811, -3.3522e-07, -0.00055842, 0.0010232, -0.0013247, 0.0014202, -0.0012989, 0.00098378, -0.0005267, 2.7916e-07, 0.00051393, -0.00093812, 0.0012101, -0.0012925, 0.0011778, -0.00088869, 0.00047401, -2.1651e-07, -0.00045914, 0.00083494, -0.0010729, 0.0011416, -0.0010363, 0.00077895, -0.00041385, 1.5056e-07, 0.00039779, -0.00072046, 0.00092207, -0.00097708, 0.00088325, -0.00066108, 0.0003497, -8.4495e-08, -0.00033327, 0.00060085, -0.00076543, 0.00080727, -0.00072623, 0.00054087, -0.00028465, 2.1221e-08, 0.00026854, -0.00048146, 0.00060988, -0.00063949, 0.00057185, -0.00042325, 0.0002213, 3.672e-08, -0.00020606, 0.00036676, -0.00046111, 0.00047972, -0.00042548, 0.00031221, -0.00016175, -8.7271e-08, 0.00014783, -0.0002603, 0.00032359, -0.00033264, 0.00029129, -0.00021083, 0.00010761, 1.2891e-07, -9.5302e-05, 0.00016467, -0.00020057, 0.00020163, -0.00017224, 0.00012127, -5.9978e-05, -1.607e-07, 4.9477e-05, -8.16e-05, 9.4181e-05, -8.8808e-05, 7.0191e-05, -4.4838e-05, 1.9516e-05, 1.8225e-07, -1.0897e-05, 1.2e-05, -5.4681e-06, -4.7995e-06, 1.4059e-05, -1.7938e-05, 1.3539e-05, -1.9372e-07, -2.0292e-05, 4.3945e-05, -6.5424e-05, 7.9157e-05, -8.0572e-05, 6.7183e-05, -3.9297e-05, 1.9574e-07, 4.4277e-05, -8.665e-05, 0.00011913, -0.00013504, 0.00013015, -0.00010357, 5.8158e-05, -1.8933e-07, -6.1517e-05, 0.00011702, -0.00015689, 0.00017388, -0.00016418, 0.00012821, -7.074e-05, 1.7581e-07, 7.2672e-05, -0.00013631, 0.00018042, -0.00019755, 0.00018443, -0.00014249, 7.7816e-05, -1.567e-07, -7.8541e-05, 0.00014602, -0.00019168, 0.00020824, -0.00019294, 0.000148, -8.0251e-05, 1.3361e-07, 7.9999e-05, -0.00014779, 0.00019283, -0.00020827, 0.00019189, -0.00014638, 7.8943e-05, -1.0817e-07, -7.7941e-05, 0.00014327, -0.00018603, 0.00019998, -0.0001834, 0.00013928, -7.4775e-05, 8.1894e-08, 7.324e-05, -0.00013405, 0.00017335, -0.0001856, 0.00016954, -0.00012824, 6.8579e-05, -5.6159e-08, -6.6705e-05, 0.00012163, -0.0001567, 0.00016717, -0.00015215, 0.00011468, -6.1103e-05, 3.2122e-08, 5.9058e-05, -0.0001073, 0.00013777, -0.00014647, 0.00013286, -9.9802e-05, 5.2992e-05, -1.0688e-08, -5.0914e-05, 9.2186e-05, -0.00011797, 0.00012501, -0.00011302, 8.4617e-05, -4.4775e-05, -7.5012e-09, 4.2773e-05, -7.7181e-05, 9.8441e-05, -0.00010397, 9.3696e-05, -6.9915e-05, 3.6867e-05, 2.2075e-08, -3.5019e-05, 6.2969e-05, -8.0044e-05, 8.426e-05, -7.5674e-05, 5.6274e-05, -2.9567e-05, -3.2911e-08, 2.7925e-05, -5.0029e-05, 6.3372e-05, -6.6476e-05, 5.9491e-05, -4.4081e-05, 2.3072e-05, 4.0111e-08, -2.1663e-05, 3.8658e-05, -4.8784e-05, 5.0981e-05, -4.5452e-05, 3.3547e-05, -1.7485e-05, -4.396e-08, 1.6317e-05, -2.8992e-05, 3.6436e-05, -3.7921e-05, 3.3667e-05, -2.4742e-05, 1.2836e-05, 4.4882e-08, -1.19e-05, 2.1042e-05, -2.6322e-05, 2.7269e-05, -2.4096e-05, 1.7623e-05, -9.0931e-06, -4.3394e-08, 8.3708e-06, -1.4718e-05, 1.8314e-05, -1.8871e-05, 1.6585e-05, -1.2061e-05, 6.1836e-06, 4.0062e-08, -5.648e-06, 9.8636e-06, -1.2196e-05, 1.2488e-05, -1.0903e-05, 7.8744e-06, -4.0056e-06, -3.5454e-08, 3.6263e-06, -6.2798e-06, 7.7041e-06, -7.8259e-06, 6.7771e-06, -4.8519e-06, 2.4431e-06, 3.0109e-08, -2.1889e-06, 3.7489e-06, -4.5521e-06, 4.5759e-06, -3.9197e-06, 2.7733e-06, -1.3768e-06, -2.4503e-08, 1.2182e-06, -2.0537e-06, 2.4577e-06, -2.4338e-06, 2.0519e-06, -1.4266e-06, 6.9282e-07, 1.9036e-08, -6.0323e-07, 9.9174e-07, -1.1592e-06, 1.12e-06, -9.1923e-07, 6.1975e-07, -2.8885e-07, -1.4014e-08, 2.4584e-07, -3.8437e-07, 4.2799e-07, -3.9192e-07, 3.0212e-07, -1.8834e-07, 7.7751e-08, 9.6472e-09, -6.3435e-08, 8.2764e-08, -7.444e-08, 4.9794e-08, -2.1195e-08, -1.0165e-09, 1.0574e-08, -6.0567e-09],
// ];

let signalFilterParameterList = [
    [48000, 32, 16700, 17300],
    [48000, 32, 18700, 19300],
    [48000, 32, 20700, 21300],
];

let signalFilterList = []

signalFilterParameterList.forEach((item) => {
    let bp = fftUtils.createBandPassFilter(item[0], item[1], item[2], item[3]);
    signalFilterList.push(bp)
})

let qb2123filter = fftUtils.createBandPassFilter(48000, 32, 21100, 22900);
let qb1719filter = fftUtils.createBandPassFilter(48000, 32, 17000, 18500);
let qb1921filter = fftUtils.createBandPassFilter(48000, 32, 19000, 21000);

// chirp滤波参数
// let chirpFilterParameterList = [
//     [-0.00010261, 3.6246e-05, -1.4446e-07, 3.8624e-05, -0.00010776, 0.00011362, 1.1258e-07, -0.0001871, 0.00031431, -0.00025607, -6.661e-08, 0.00031875, -0.00049058, 0.00037264, 1.2397e-08, -0.00041605, 0.00061273, -0.00044729, 4.3171e-08, 0.00046503, -0.00066276, 0.00046862, -9.3062e-08, -0.00045726, 0.00063101, -0.00043149, 1.3099e-07, 0.00039117, -0.00051781, 0.00033798, -1.522e-07, -0.00027252, 0.0003339, -0.00019744, 1.5408e-07, 0.00011403, -9.9476e-05, 2.5616e-05, -1.3648e-07, 6.594e-05, -0.00015794, 0.00015705, 1.017e-07, -0.00024549, 0.00040667, -0.00032784, -5.4224e-08, 0.0004018, -0.00061477, 0.00046456, 1.2668e-10, -0.00051404, 0.00075406, -0.00054839, 5.3714e-08, 0.00056605, -0.0008039, 0.0005664, -1.0048e-07, -0.00054863, 0.00075409, -0.00051347, 1.3428e-07, 0.00046101, -0.00060669, 0.00039328, -1.5089e-07, -0.00031129, 0.00037621, -0.00021819, 1.4831e-07, 0.00011582, -8.834e-05, 8.0596e-06, -1.2696e-07, 0.00010258, -0.00022287, 0.00021195, 8.9645e-08, -0.0003172, 0.00051898, -0.0004144, -4.1194e-08, 0.00050069, -0.00076184, 0.00057289, -1.2184e-08, -0.00062851, 0.00091847, -0.00066553, 6.3688e-08, 0.00068216, -0.00096544, 0.00067783, -1.0679e-07, -0.00065176, 0.00089226, -0.00060493, 1.3607e-07, 0.00053768, -0.00070322, 0.00045251, -1.4789e-07, -0.00035091, 0.00041747, -0.00023659, 1.4087e-07, 0.00011208, -6.7186e-05, -1.8104e-05, -1.1601e-07, 0.00015071, -0.00030595, 0.00028095, 7.6582e-08, -0.00040521, 0.00065568, -0.00051903, -2.7707e-08, 0.00061889, -0.00093681, 0.00070121, -2.4339e-08, -0.00076305, 0.001111, -0.00080218, 7.2915e-08, 0.00081663, -0.0011518, 0.00080586, -1.1186e-07, -0.00076918, 0.0010487, -0.00070785, 1.3629e-07, 0.0006226, -0.00080892, 0.0005164, -1.4319e-07, -0.00039139, 0.00045717, -0.00025193, 1.3181e-07, 0.00010135, -3.3393e-05, -5.5093e-05, -1.0374e-07, 0.00021325, -0.00041177, 0.00036758, 6.268e-08, -0.00051363, 0.00082291, -0.00064627, -1.396e-08, 0.00076127, -0.0011467, 0.00085458, -3.6143e-08, -0.00092275, 0.0013387, -0.00096334, 8.1224e-08, 0.00097418, -0.0013694, 0.00095478, -1.1557e-07, -0.0009046, 0.0012283, -0.00082523, 1.3488e-07, 0.00071789, -0.00092619, 0.00058615, -1.368e-07, -0.0004329, 0.00049482, -0.00026329, 1.2123e-07, 8.1616e-05, 1.6618e-05, -0.00010597, -9.0313e-08, 0.00029429, -0.0005468, 0.00047691, 4.8122e-08, -0.00064835, 0.0010295, -0.00080273, -1.5333e-10, 0.00093497, -0.0014019, 0.0010405, -4.7403e-08, -0.0011152, 0.0016124, -0.0011565, 8.846e-08, 0.0011619, -0.0016278, 0.0011311, -1.1781e-07, -0.0010637, 0.0014381, -0.00096171, 1.318e-07, 0.00082697, -0.0010588, 0.00066377, -1.2876e-07, -0.00047592, 0.00052995, -0.00026954, 1.0924e-07, 5.0082e-05, 8.8001e-05, -0.00017522, -7.5882e-08, 0.00039991, -0.00072071, 0.00061648, 3.3106e-08, -0.00081826, 0.0012889, -0.0009984, 1.3509e-08, 0.0011508, -0.0017182, 0.0012703, -5.7937e-08, -0.001352, 0.0019485, -0.0013931, 9.4481e-08, 0.0013908, -0.0019422, 0.001345, -1.1851e-07, -0.0012554, 0.00169, -0.0011247, 1.2705e-07, 0.00095533, -0.0012132, 0.00075259, -1.1914e-07, -0.00052139, 0.0005621, -0.00026907, 9.5953e-08, 2.4902e-06, 0.00018866, -0.00026973, -6.0628e-08, 0.0005396, -0.0009487, 0.00079824, 1.7836e-08, -0.0010375, 0.0016225, -0.0012493, 2.6827e-08, 0.0014263, -0.0021212, 0.0015625, -6.7571e-08, -0.0016522, 0.0023738, -0.001692, 9.9167e-08, 0.0016791, -0.0023375, 0.0016133, -1.1761e-07, -0.0014947, 0.0020034, -0.0013265, 1.2065e-07, 0.0011123, -0.0014, 0.00085839, -1.0803e-07, -0.00057113, 0.00059087, -0.0002594, 8.154e-08, -6.8091e-05, 0.00033159, -0.00040098, -4.4745e-08, 0.00072929, -0.0012563, 0.0010423, 2.5195e-09, -0.0013301, 0.0020667, -0.0015828, 3.9602e-08, 0.0017916, -0.0026548, 0.0019491, -7.6147e-08, -0.0020488, 0.0029354, -0.0020865, 1.0242e-07, 0.0020589, -0.0028576, 0.0019659, -1.1509e-07, -0.0018082, 0.002413, -0.0015896, 1.1265e-07, 0.0013149, -0.0016389, 0.0009918, -9.5555e-08, -0.00062866, 0.00061588, -0.00023636, 6.6167e-08, -0.00017402, 0.00054019, -0.00058971, -2.8437e-08, 0.00099805, -0.0016904, 0.0013859, -1.2633e-08, -0.0017405, 0.0026893, -0.00205, 5.1647e-08, 0.0023031, -0.0034021, 0.0024907, -8.3523e-08, -0.0026046, 0.0037225, -0.0026396, 1.0416e-07, 0.0025918, -0.0035875, 0.0024609, -1.1095e-07, -0.002248, 0.0029871, -0.0019578, 1.0313e-07, 0.0015967, -0.0019693, 0.0011742, -8.1849e-08, -0.00070135, 0.00063681, -0.00019177, 5.0023e-08, -0.00034008, 0.00086165, -0.00087797, -1.1915e-08, 0.0014054, -0.0023475, 0.0019055, -2.7415e-08, -0.0023616, 0.0036321, -0.0027582, 6.2786e-08, 0.0030806, -0.0045397, 0.0033164, -8.9577e-08, -0.0034551, 0.0049294, -0.0034892, 1.0433e-07, 0.0034134, -0.004715, 0.0032269, -1.052e-07, -0.0029307, 0.0038795, -0.0025306, 9.217e-08, 0.0020347, -0.0024813, 0.0014552, -6.7072e-08, -0.00080667, 0.00065338, -0.00010684, 3.3306e-08, -0.00062478, 0.0014082, -0.0013665, 4.6069e-09, 0.0020958, -0.0034627, 0.0027894, -4.1624e-08, -0.0034242, 0.0052503, -0.0039779, 7.2857e-08, 0.0044296, -0.0065216, 0.004761, -9.4208e-08, -0.0049557, 0.0070681, -0.0050017, 1.0291e-07, 0.0048899, -0.0067508, 0.0046165, -9.7897e-08, -0.0041811, 0.0055215, -0.0035894, 7.9906e-08, 0.0028507, -0.0034378, 0.0019803, -5.1402e-08, -0.00099703, 0.00066537, 7.5029e-05, 1.6226e-08, -0.0012086, 0.0025297, -0.0023726, 2.0914e-08, 0.0035336, -0.0058012, 0.0046564, -5.5071e-08, -0.005704, 0.0087517, -0.0066403, 8.1716e-08, 0.0074287, -0.01097, 0.0080355, -9.7339e-08, -0.0084284, 0.012071, -0.0085795, 9.9904e-08, 0.0084642, -0.011739, 0.0080638, -8.9122e-08, -0.0073645, 0.0097585, -0.0063591, 6.6478e-08, 0.0050463, -0.0060478, 0.0034324, -3.5029e-08, -0.0015295, 0.00067263, 0.00064277, -1.0017e-09, -0.0030589, 0.00615, -0.0056871, 3.6795e-08, 0.0084899, -0.014063, 0.011426, -6.7575e-08, -0.014448, 0.022594, -0.017508, 8.9241e-08, 0.020554, -0.031191, 0.023534, -9.8917e-08, -0.026397, 0.03927, -0.029091, 9.533e-08, 0.031568, -0.046261, 0.033784, -7.8974e-08, -0.035696, 0.051658, -0.037271, 5.2048e-08, 0.038479, -0.055066, 0.039296, -1.8159e-08, -0.039709, 0.056231, -0.039709, -1.8159e-08, 0.039296, -0.055066, 0.038479, 5.2048e-08, -0.037271, 0.051658, -0.035696, -7.8974e-08, 0.033784, -0.046261, 0.031568, 9.533e-08, -0.029091, 0.03927, -0.026397, -9.8917e-08, 0.023534, -0.031191, 0.020554, 8.9241e-08, -0.017508, 0.022594, -0.014448, -6.7575e-08, 0.011426, -0.014063, 0.0084899, 3.6795e-08, -0.0056871, 0.00615, -0.0030589, -1.0017e-09, 0.00064277, 0.00067263, -0.0015295, -3.5029e-08, 0.0034324, -0.0060478, 0.0050463, 6.6478e-08, -0.0063591, 0.0097585, -0.0073645, -8.9122e-08, 0.0080638, -0.011739, 0.0084642, 9.9904e-08, -0.0085795, 0.012071, -0.0084284, -9.7339e-08, 0.0080355, -0.01097, 0.0074287, 8.1716e-08, -0.0066403, 0.0087517, -0.005704, -5.5071e-08, 0.0046564, -0.0058012, 0.0035336, 2.0914e-08, -0.0023726, 0.0025297, -0.0012086, 1.6226e-08, 7.5029e-05, 0.00066537, -0.00099703, -5.1402e-08, 0.0019803, -0.0034378, 0.0028507, 7.9906e-08, -0.0035894, 0.0055215, -0.0041811, -9.7897e-08, 0.0046165, -0.0067508, 0.0048899, 1.0291e-07, -0.0050017, 0.0070681, -0.0049557, -9.4208e-08, 0.004761, -0.0065216, 0.0044296, 7.2857e-08, -0.0039779, 0.0052503, -0.0034242, -4.1624e-08, 0.0027894, -0.0034627, 0.0020958, 4.6069e-09, -0.0013665, 0.0014082, -0.00062478, 3.3306e-08, -0.00010684, 0.00065338, -0.00080667, -6.7072e-08, 0.0014552, -0.0024813, 0.0020347, 9.217e-08, -0.0025306, 0.0038795, -0.0029307, -1.052e-07, 0.0032269, -0.004715, 0.0034134, 1.0433e-07, -0.0034892, 0.0049294, -0.0034551, -8.9577e-08, 0.0033164, -0.0045397, 0.0030806, 6.2786e-08, -0.0027582, 0.0036321, -0.0023616, -2.7415e-08, 0.0019055, -0.0023475, 0.0014054, -1.1915e-08, -0.00087797, 0.00086165, -0.00034008, 5.0023e-08, -0.00019177, 0.00063681, -0.00070135, -8.1849e-08, 0.0011742, -0.0019693, 0.0015967, 1.0313e-07, -0.0019578, 0.0029871, -0.002248, -1.1095e-07, 0.0024609, -0.0035875, 0.0025918, 1.0416e-07, -0.0026396, 0.0037225, -0.0026046, -8.3523e-08, 0.0024907, -0.0034021, 0.0023031, 5.1647e-08, -0.00205, 0.0026893, -0.0017405, -1.2633e-08, 0.0013859, -0.0016904, 0.00099805, -2.8437e-08, -0.00058971, 0.00054019, -0.00017402, 6.6167e-08, -0.00023636, 0.00061588, -0.00062866, -9.5555e-08, 0.0009918, -0.0016389, 0.0013149, 1.1265e-07, -0.0015896, 0.002413, -0.0018082, -1.1509e-07, 0.0019659, -0.0028576, 0.0020589, 1.0242e-07, -0.0020865, 0.0029354, -0.0020488, -7.6147e-08, 0.0019491, -0.0026548, 0.0017916, 3.9602e-08, -0.0015828, 0.0020667, -0.0013301, 2.5195e-09, 0.0010423, -0.0012563, 0.00072929, -4.4745e-08, -0.00040098, 0.00033159, -6.8091e-05, 8.154e-08, -0.0002594, 0.00059087, -0.00057113, -1.0803e-07, 0.00085839, -0.0014, 0.0011123, 1.2065e-07, -0.0013265, 0.0020034, -0.0014947, -1.1761e-07, 0.0016133, -0.0023375, 0.0016791, 9.9167e-08, -0.001692, 0.0023738, -0.0016522, -6.7571e-08, 0.0015625, -0.0021212, 0.0014263, 2.6827e-08, -0.0012493, 0.0016225, -0.0010375, 1.7836e-08, 0.00079824, -0.0009487, 0.0005396, -6.0628e-08, -0.00026973, 0.00018866, 2.4902e-06, 9.5953e-08, -0.00026907, 0.0005621, -0.00052139, -1.1914e-07, 0.00075259, -0.0012132, 0.00095533, 1.2705e-07, -0.0011247, 0.00169, -0.0012554, -1.1851e-07, 0.001345, -0.0019422, 0.0013908, 9.4481e-08, -0.0013931, 0.0019485, -0.001352, -5.7937e-08, 0.0012703, -0.0017182, 0.0011508, 1.3509e-08, -0.0009984, 0.0012889, -0.00081826, 3.3106e-08, 0.00061648, -0.00072071, 0.00039991, -7.5882e-08, -0.00017522, 8.8001e-05, 5.0082e-05, 1.0924e-07, -0.00026954, 0.00052995, -0.00047592, -1.2876e-07, 0.00066377, -0.0010588, 0.00082697, 1.318e-07, -0.00096171, 0.0014381, -0.0010637, -1.1781e-07, 0.0011311, -0.0016278, 0.0011619, 8.846e-08, -0.0011565, 0.0016124, -0.0011152, -4.7403e-08, 0.0010405, -0.0014019, 0.00093497, -1.5333e-10, -0.00080273, 0.0010295, -0.00064835, 4.8122e-08, 0.00047691, -0.0005468, 0.00029429, -9.0313e-08, -0.00010597, 1.6618e-05, 8.1616e-05, 1.2123e-07, -0.00026329, 0.00049482, -0.0004329, -1.368e-07, 0.00058615, -0.00092619, 0.00071789, 1.3488e-07, -0.00082523, 0.0012283, -0.0009046, -1.1557e-07, 0.00095478, -0.0013694, 0.00097418, 8.1224e-08, -0.00096334, 0.0013387, -0.00092275, -3.6143e-08, 0.00085458, -0.0011467, 0.00076127, -1.396e-08, -0.00064627, 0.00082291, -0.00051363, 6.268e-08, 0.00036758, -0.00041177, 0.00021325, -1.0374e-07, -5.5093e-05, -3.3393e-05, 0.00010135, 1.3181e-07, -0.00025193, 0.00045717, -0.00039139, -1.4319e-07, 0.0005164, -0.00080892, 0.0006226, 1.3629e-07, -0.00070785, 0.0010487, -0.00076918, -1.1186e-07, 0.00080586, -0.0011518, 0.00081663, 7.2915e-08, -0.00080218, 0.001111, -0.00076305, -2.4339e-08, 0.00070121, -0.00093681, 0.00061889, -2.7707e-08, -0.00051903, 0.00065568, -0.00040521, 7.6582e-08, 0.00028095, -0.00030595, 0.00015071, -1.1601e-07, -1.8104e-05, -6.7186e-05, 0.00011208, 1.4087e-07, -0.00023659, 0.00041747, -0.00035091, -1.4789e-07, 0.00045251, -0.00070322, 0.00053768, 1.3607e-07, -0.00060493, 0.00089226, -0.00065176, -1.0679e-07, 0.00067783, -0.00096544, 0.00068216, 6.3688e-08, -0.00066553, 0.00091847, -0.00062851, -1.2184e-08, 0.00057289, -0.00076184, 0.00050069, -4.1194e-08, -0.0004144, 0.00051898, -0.0003172, 8.9645e-08, 0.00021195, -0.00022287, 0.00010258, -1.2696e-07, 8.0596e-06, -8.834e-05, 0.00011582, 1.4831e-07, -0.00021819, 0.00037621, -0.00031129, -1.5089e-07, 0.00039328, -0.00060669, 0.00046101, 1.3428e-07, -0.00051347, 0.00075409, -0.00054863, -1.0048e-07, 0.0005664, -0.0008039, 0.00056605, 5.3714e-08, -0.00054839, 0.00075406, -0.00051404, 1.2668e-10, 0.00046456, -0.00061477, 0.0004018, -5.4224e-08, -0.00032784, 0.00040667, -0.00024549, 1.017e-07, 0.00015705, -0.00015794, 6.594e-05, -1.3648e-07, 2.5616e-05, -9.9476e-05, 0.00011403, 1.5408e-07, -0.00019744, 0.0003339, -0.00027252, -1.522e-07, 0.00033798, -0.00051781, 0.00039117, 1.3099e-07, -0.00043149, 0.00063101, -0.00045726, -9.3062e-08, 0.00046862, -0.00066276, 0.00046503, 4.3171e-08, -0.00044729, 0.00061273, -0.00041605, 1.2397e-08, 0.00037264, -0.00049058, 0.00031875, -6.661e-08, -0.00025607, 0.00031431, -0.0001871, 1.1258e-07, 0.00011362, -0.00010776, 3.8624e-05, -1.4446e-07, 3.6246e-05, -0.00010261],
//     [-5.1451e-05, 4.4095e-05, 1.8062e-06, -4.7714e-05, 5.4359e-05, -2.8978e-07, -0.00010656, 0.00022926, -0.00031465, 0.00031404, -0.00020415, 7.2063e-08, 0.00024537, -0.00045658, 0.00055987, -0.00050961, 0.0003063, 1.6586e-07, -0.00032397, 0.00056968, -0.00066269, 0.00057363, -0.00032831, -3.5678e-07, 0.00031573, -0.00052835, 0.00058388, -0.00047872, 0.00025836, 4.4681e-07, -0.00021702, 0.00033378, -0.00033349, 0.00024109, -0.00011013, -4.106e-07, 4.9856e-05, -3.1052e-05, -2.872e-05, 8.1181e-05, -7.943e-05, 2.5851e-07, 0.00014271, -0.0003008, 0.00040701, -0.00040191, 0.00025906, -3.364e-08, -0.0003075, 0.00056917, -0.00069468, 0.00062962, -0.00037693, -2.0034e-07, 0.00039574, -0.00069342, 0.00080381, -0.00069335, 0.00039542, 3.7727e-07, -0.00037727, 0.00062874, -0.00069167, 0.00056423, -0.00030278, -4.4722e-07, 0.00025042, -0.00038124, 0.00037577, -0.00026649, 0.00011815, 3.906e-07, -4.4257e-05, 9.5255e-06, 6.716e-05, -0.00012607, 0.00011188, -2.2369e-07, -0.00018767, 0.00038867, -0.00051933, 0.0005079, -0.00032483, -6.0521e-09, 0.00038107, -0.00070185, 0.00085282, -0.0007698, 0.0004591, 2.3345e-07, -0.00047855, 0.00083564, -0.00096534, 0.00082979, -0.00047157, -3.9414e-07, 0.00044636, -0.00074073, 0.00081104, -0.00065812, 0.00035104, 4.428e-07, -0.00028551, 0.00042973, -0.00041701, 0.00028903, -0.0001234, -3.6595e-07, 3.3646e-05, 2.2542e-05, -0.00011985, 0.00018502, -0.00015339, 1.8574e-07, 0.00024341, -0.00049651, 0.00065604, -0.00063601, 0.00040386, 4.6454e-08, -0.00046859, 0.00085901, -0.0010394, 0.00093456, -0.00055531, -2.6465e-07, 0.0005748, -0.0010003, 0.0011517, -0.00098656, 0.00055868, 4.0703e-07, -0.00052459, 0.00086676, -0.00094441, 0.00076209, -0.00040388, -4.3347e-07, 0.00032257, -0.00047927, 0.00045668, -0.00030781, 0.00012509, 3.3689e-07, -1.6712e-05, -6.7867e-05, 0.00019044, -0.00026162, 0.00020627, -1.4514e-07, -0.00031265, 0.00062933, -0.00082328, 0.00079183, -0.00049951, -8.6987e-08, 0.00057358, -0.0010469, 0.0012616, -0.0011301, 0.00066917, 2.9342e-07, -0.00068795, 0.0011933, -0.0013693, 0.0011689, -0.0006596, -4.1562e-07, 0.00061434, -0.0010105, 0.0010954, -0.00087879, 0.00046251, 4.1922e-07, -0.00036209, 0.00053008, -0.00049431, 0.00032173, -0.00012219, -3.0369e-07, -8.3334e-06, 0.0001302, -0.00028399, 0.00036088, -0.00027376, 1.0239e-07, 0.00039926, -0.00079437, 0.0010299, -0.00098341, 0.00061662, 1.2707e-07, -0.00070121, 0.0012745, -0.0015301, 0.0013658, -0.00080598, -3.1927e-07, 0.00082313, -0.0014232, 0.0016277, -0.0013848, 0.00077866, 4.1967e-07, -0.00071928, 0.0011776, -0.0012698, 0.0010124, -0.00052884, -4.0012e-07, 0.00040495, -0.00058273, 0.00052942, -0.0003294, 0.00011332, 2.6673e-07, 4.4066e-05, -0.00021503, 0.00040798, -0.00049023, 0.00036068, -5.8043e-08, -0.00050908, 0.0010025, -0.0012893, 0.001223, -0.00076261, -1.6611e-07, 0.00085939, -0.001556, 0.0018613, -0.0016558, 0.00097399, 3.4175e-07, -0.00098839, 0.0017036, -0.0019421, 0.0016467, -0.00092265, -4.1901e-07, 0.00084522, -0.0013772, 0.0014768, -0.0011696, 0.00060602, 3.7631e-07, -0.00045267, 0.00063837, -0.00056155, 0.00032883, -9.639e-05, -2.2643e-07, -9.4437e-05, 0.0003308, -0.00057403, 0.00066132, -0.00047464, 1.2686e-08, 0.00065135, -0.001271, 0.0016229, -0.0015303, 0.00094935, 2.0355e-07, -0.0010609, 0.0019138, -0.0022818, 0.0020235, -0.0011866, -3.6048e-07, 0.0011969, -0.0020567, 0.0023373, -0.0019753, 0.0011029, 4.1352e-07, -0.0010019, 0.0016244, -0.0017317, 0.0013618, -0.00069944, -3.48e-07, 0.00050799, -0.00069924, 0.0005903, -0.00031701, 6.8105e-05, 1.8326e-07, 0.00016595, -0.00049157, 0.00080153, -0.00089364, 0.00062841, 3.3085e-08, -0.00084174, 0.0016294, -0.002067, 0.0019387, -0.0011972, -2.3884e-07, 0.0013277, -0.0023874, 0.0028377, -0.0025092, 0.0014674, 3.7511e-07, -0.0014717, 0.0025218, -0.0028573, 0.0024072, -0.0013394, -4.0318e-07, 0.0012067, -0.0019466, 0.0020626, -0.0016099, 0.00081892, 3.155e-07, -0.00057597, 0.00076966, -0.0006153, 0.0002888, -2.2635e-05, -1.3775e-07, -0.00027029, 0.00072272, -0.0011257, 0.0012228, -0.00084543, -7.8662e-08, 0.0011091, -0.0021321, 0.0026896, -0.0025108, 0.0015444, 2.7145e-07, -0.0017014, 0.0030506, -0.0036165, 0.0031898, -0.0018609, -3.8537e-07, 0.0018572, -0.0031744, 0.0035873, -0.0030134, 0.0016714, 3.8803e-07, -0.0014937, 0.0023975, -0.0025247, 0.001955, -0.0009841, -2.7914e-07, 0.00066692, -0.00085865, 0.00063622, -0.00023423, -5.158e-05, 9.046e-08, 0.00043107, -0.0010758, 0.0016185, -0.0017217, 0.0011739, 1.2344e-07, -0.0015136, 0.0028929, -0.0036325, 0.0033782, -0.0020713, -3.0092e-07, 0.0022702, -0.004062, 0.0048062, -0.0042315, 0.0024643, 3.9105e-07, -0.0024505, 0.0041807, -0.0047148, 0.0039516, -0.002186, -3.6821e-07, 0.0019398, -0.003099, 0.0032436, -0.0024914, 0.0012402, 2.3936e-07, -0.00080496, 0.0009876, -0.00065278, 0.00013024, 0.00018162, -4.1985e-08, -0.0007044, 0.0016742, -0.002453, 0.0025672, -0.0017315, -1.6682e-07, 0.0022034, -0.0041942, 0.0052506, -0.004872, 0.0029823, 3.2682e-07, -0.0032612, 0.0058312, -0.0068961, 0.0060693, -0.0035337, -3.9203e-07, 0.0035117, -0.005989, 0.0067505, -0.0056534, 0.0031241, 3.439e-07, -0.0027608, 0.0043957, -0.0045781, 0.0034908, -0.0017184, -1.9662e-07, 0.0010614, -0.0012207, 0.00066476, 9.2471e-05, -0.00045003, -7.0652e-09, 0.0012652, -0.0029064, 0.0041805, -0.0043282, 0.0029007, 2.0822e-07, -0.0036716, 0.0069865, -0.008752, 0.0081327, -0.0049886, -3.4877e-07, 0.0054854, -0.0098417, 0.011682, -0.010322, 0.0060354, 3.8823e-07, -0.0060505, 0.010367, -0.011739, 0.0098756, -0.0054811, -3.1538e-07, 0.0048793, -0.0077879, 0.0081183, -0.00618, 0.0030234, 1.5144e-07, -0.0017789, 0.0018728, -0.00067202, -0.00078777, 0.0012888, 5.6066e-08, -0.0030754, 0.0069657, -0.0099979, 0.010398, -0.0070315, -2.4711e-07, 0.0091425, -0.017695, 0.022594, -0.021442, 0.01346, 3.6647e-07, -0.015596, 0.028824, -0.035332, 0.032329, -0.019635, -3.7968e-07, 0.021468, -0.038663, 0.04626, -0.041376, 0.024593, 2.8298e-07, -0.025829, 0.045647, -0.05363, 0.047126, -0.027532, -1.044e-07, 0.027969, -0.048633, 0.05623, -0.048633, 0.027969, -1.044e-07, -0.027532, 0.047126, -0.05363, 0.045647, -0.025829, 2.8298e-07, 0.024593, -0.041376, 0.04626, -0.038663, 0.021468, -3.7968e-07, -0.019635, 0.032329, -0.035332, 0.028824, -0.015596, 3.6647e-07, 0.01346, -0.021442, 0.022594, -0.017695, 0.0091425, -2.4711e-07, -0.0070315, 0.010398, -0.0099979, 0.0069657, -0.0030754, 5.6066e-08, 0.0012888, -0.00078777, -0.00067202, 0.0018728, -0.0017789, 1.5144e-07, 0.0030234, -0.00618, 0.0081183, -0.0077879, 0.0048793, -3.1538e-07, -0.0054811, 0.0098756, -0.011739, 0.010367, -0.0060505, 3.8823e-07, 0.0060354, -0.010322, 0.011682, -0.0098417, 0.0054854, -3.4877e-07, -0.0049886, 0.0081327, -0.008752, 0.0069865, -0.0036716, 2.0822e-07, 0.0029007, -0.0043282, 0.0041805, -0.0029064, 0.0012652, -7.0652e-09, -0.00045003, 9.2471e-05, 0.00066476, -0.0012207, 0.0010614, -1.9662e-07, -0.0017184, 0.0034908, -0.0045781, 0.0043957, -0.0027608, 3.439e-07, 0.0031241, -0.0056534, 0.0067505, -0.005989, 0.0035117, -3.9203e-07, -0.0035337, 0.0060693, -0.0068961, 0.0058312, -0.0032612, 3.2682e-07, 0.0029823, -0.004872, 0.0052506, -0.0041942, 0.0022034, -1.6682e-07, -0.0017315, 0.0025672, -0.002453, 0.0016742, -0.0007044, -4.1985e-08, 0.00018162, 0.00013024, -0.00065278, 0.0009876, -0.00080496, 2.3936e-07, 0.0012402, -0.0024914, 0.0032436, -0.003099, 0.0019398, -3.6821e-07, -0.002186, 0.0039516, -0.0047148, 0.0041807, -0.0024505, 3.9105e-07, 0.0024643, -0.0042315, 0.0048062, -0.004062, 0.0022702, -3.0092e-07, -0.0020713, 0.0033782, -0.0036325, 0.0028929, -0.0015136, 1.2344e-07, 0.0011739, -0.0017217, 0.0016185, -0.0010758, 0.00043107, 9.046e-08, -5.158e-05, -0.00023423, 0.00063622, -0.00085865, 0.00066692, -2.7914e-07, -0.0009841, 0.001955, -0.0025247, 0.0023975, -0.0014937, 3.8803e-07, 0.0016714, -0.0030134, 0.0035873, -0.0031744, 0.0018572, -3.8537e-07, -0.0018609, 0.0031898, -0.0036165, 0.0030506, -0.0017014, 2.7145e-07, 0.0015444, -0.0025108, 0.0026896, -0.0021321, 0.0011091, -7.8662e-08, -0.00084543, 0.0012228, -0.0011257, 0.00072272, -0.00027029, -1.3775e-07, -2.2635e-05, 0.0002888, -0.0006153, 0.00076966, -0.00057597, 3.155e-07, 0.00081892, -0.0016099, 0.0020626, -0.0019466, 0.0012067, -4.0318e-07, -0.0013394, 0.0024072, -0.0028573, 0.0025218, -0.0014717, 3.7511e-07, 0.0014674, -0.0025092, 0.0028377, -0.0023874, 0.0013277, -2.3884e-07, -0.0011972, 0.0019387, -0.002067, 0.0016294, -0.00084174, 3.3085e-08, 0.00062841, -0.00089364, 0.00080153, -0.00049157, 0.00016595, 1.8326e-07, 6.8105e-05, -0.00031701, 0.0005903, -0.00069924, 0.00050799, -3.48e-07, -0.00069944, 0.0013618, -0.0017317, 0.0016244, -0.0010019, 4.1352e-07, 0.0011029, -0.0019753, 0.0023373, -0.0020567, 0.0011969, -3.6048e-07, -0.0011866, 0.0020235, -0.0022818, 0.0019138, -0.0010609, 2.0355e-07, 0.00094935, -0.0015303, 0.0016229, -0.001271, 0.00065135, 1.2686e-08, -0.00047464, 0.00066132, -0.00057403, 0.0003308, -9.4437e-05, -2.2643e-07, -9.639e-05, 0.00032883, -0.00056155, 0.00063837, -0.00045267, 3.7631e-07, 0.00060602, -0.0011696, 0.0014768, -0.0013772, 0.00084522, -4.1901e-07, -0.00092265, 0.0016467, -0.0019421, 0.0017036, -0.00098839, 3.4175e-07, 0.00097399, -0.0016558, 0.0018613, -0.001556, 0.00085939, -1.6611e-07, -0.00076261, 0.001223, -0.0012893, 0.0010025, -0.00050908, -5.8043e-08, 0.00036068, -0.00049023, 0.00040798, -0.00021503, 4.4066e-05, 2.6673e-07, 0.00011332, -0.0003294, 0.00052942, -0.00058273, 0.00040495, -4.0012e-07, -0.00052884, 0.0010124, -0.0012698, 0.0011776, -0.00071928, 4.1967e-07, 0.00077866, -0.0013848, 0.0016277, -0.0014232, 0.00082313, -3.1927e-07, -0.00080598, 0.0013658, -0.0015301, 0.0012745, -0.00070121, 1.2707e-07, 0.00061662, -0.00098341, 0.0010299, -0.00079437, 0.00039926, 1.0239e-07, -0.00027376, 0.00036088, -0.00028399, 0.0001302, -8.3334e-06, -3.0369e-07, -0.00012219, 0.00032173, -0.00049431, 0.00053008, -0.00036209, 4.1922e-07, 0.00046251, -0.00087879, 0.0010954, -0.0010105, 0.00061434, -4.1562e-07, -0.0006596, 0.0011689, -0.0013693, 0.0011933, -0.00068795, 2.9342e-07, 0.00066917, -0.0011301, 0.0012616, -0.0010469, 0.00057358, -8.6987e-08, -0.00049951, 0.00079183, -0.00082328, 0.00062933, -0.00031265, -1.4514e-07, 0.00020627, -0.00026162, 0.00019044, -6.7867e-05, -1.6712e-05, 3.3689e-07, 0.00012509, -0.00030781, 0.00045668, -0.00047927, 0.00032257, -4.3347e-07, -0.00040388, 0.00076209, -0.00094441, 0.00086676, -0.00052459, 4.0703e-07, 0.00055868, -0.00098656, 0.0011517, -0.0010003, 0.0005748, -2.6465e-07, -0.00055531, 0.00093456, -0.0010394, 0.00085901, -0.00046859, 4.6454e-08, 0.00040386, -0.00063601, 0.00065604, -0.00049651, 0.00024341, 1.8574e-07, -0.00015339, 0.00018502, -0.00011985, 2.2542e-05, 3.3646e-05, -3.6595e-07, -0.0001234, 0.00028903, -0.00041701, 0.00042973, -0.00028551, 4.428e-07, 0.00035104, -0.00065812, 0.00081104, -0.00074073, 0.00044636, -3.9414e-07, -0.00047157, 0.00082979, -0.00096534, 0.00083564, -0.00047855, 2.3345e-07, 0.0004591, -0.0007698, 0.00085282, -0.00070185, 0.00038107, -6.0521e-09, -0.00032483, 0.0005079, -0.00051933, 0.00038867, -0.00018767, -2.2369e-07, 0.00011188, -0.00012607, 6.716e-05, 9.5255e-06, -4.4257e-05, 3.906e-07, 0.00011815, -0.00026649, 0.00037577, -0.00038124, 0.00025042, -4.4722e-07, -0.00030278, 0.00056423, -0.00069167, 0.00062874, -0.00037727, 3.7727e-07, 0.00039542, -0.00069335, 0.00080381, -0.00069342, 0.00039574, -2.0034e-07, -0.00037693, 0.00062962, -0.00069468, 0.00056917, -0.0003075, -3.364e-08, 0.00025906, -0.00040191, 0.00040701, -0.0003008, 0.00014271, 2.5851e-07, -7.943e-05, 8.1181e-05, -2.872e-05, -3.1052e-05, 4.9856e-05, -4.106e-07, -0.00011013, 0.00024109, -0.00033349, 0.00033378, -0.00021702, 4.4681e-07, 0.00025836, -0.00047872, 0.00058388, -0.00052835, 0.00031573, -3.5678e-07, -0.00032831, 0.00057363, -0.00066269, 0.00056968, -0.00032397, 1.6586e-07, 0.0003063, -0.00050961, 0.00055987, -0.00045658, 0.00024537, 7.2063e-08, -0.00020415, 0.00031404, -0.00031465, 0.00022926, -0.00010656, -2.8978e-07, 5.4359e-05, -4.7714e-05, 1.8062e-06, 4.4095e-05, -5.1451e-05],
//     [4.9981e-05, -1.2707e-05, 3.2642e-07, -1.5254e-05, 5.577e-05, -0.00011619, 0.00018751, -0.00025857, 0.00031737, -0.00035273, 0.00035567, -0.00032074, 0.0002468, -0.00013741, 5.7212e-07, 0.00015205, -0.00030636, 0.00044736, -0.00056092, 0.00063531, -0.00066268, 0.00063991, -0.00056909, 0.00045725, -0.00031562, 0.00015836, -8.9441e-07, -0.0001418, 0.00025695, -0.0003354, 0.00037264, -0.00036924, 0.00033064, -0.00026643, 0.00018899, -0.00011193, 4.8273e-05, -8.7238e-06, 2.8157e-07, -2.5255e-05, 8.0897e-05, -0.00015968, 0.00025016, -0.00033843, 0.00040983, -0.00045085, 0.00045092, -0.00040388, 0.00030897, -0.00017113, 6.4707e-07, 0.00018784, -0.00037693, 0.00054834, -0.00068505, 0.00077318, -0.00080367, 0.00077333, -0.00068526, 0.00054851, -0.00037709, 0.00018834, -9.1997e-07, -0.00016728, 0.00030126, -0.00039052, 0.00043031, -0.00042197, 0.00037271, -0.00029454, 0.00020268, -0.00011354, 4.2562e-05, -2.203e-06, 2.3037e-07, -3.866e-05, 0.00011339, -0.00021463, 0.00032804, -0.00043649, 0.00052223, -0.00056916, 0.00056497, -0.00050284, 0.00038257, -0.00021084, 7.2094e-07, 0.00022966, -0.00045902, 0.00066535, -0.00082831, 0.00093165, -0.00096505, 0.00092538, -0.00081704, 0.00065153, -0.0004461, 0.00022178, -9.381e-07, -0.00019528, 0.0003494, -0.00044958, 0.00049092, -0.00047586, 0.00041373, -0.00031946, 0.00021155, -0.00010962, 3.1845e-05, 7.4699e-06, 1.7331e-07, -5.6262e-05, 0.00015495, -0.00028366, 0.00042457, -0.00055679, 0.00065899, -0.00071213, 0.00070197, -0.0006211, 0.00047011, -0.00025787, 7.9278e-07, 0.00027881, -0.00055517, 0.00080186, -0.00099484, 0.0011152, -0.0011512, 0.0011001, -0.00096781, 0.00076882, -0.00052424, 0.00025941, -9.4842e-07, -0.00022629, 0.00040213, -0.00051332, 0.00055495, -0.00053093, 0.00045321, -0.0003402, 0.00021424, -9.8699e-05, 1.481e-05, 2.1106e-05, 1.1099e-07, -7.9127e-05, 0.00020785, -0.0003703, 0.00054445, -0.00070495, 0.00082626, -0.00088598, 0.00086773, -0.00076353, 0.00057511, -0.00031405, 8.6166e-07, 0.00033718, -0.00066894, 0.00096288, -0.0011906, 0.0013302, -0.0013686, 0.0013033, -0.0011425, 0.00090411, -0.00061391, 0.00030232, -9.5066e-07, -0.00026112, 0.00046066, -0.00058293, 0.00062326, -0.00058743, 0.00049065, -0.00035553, 0.00020901, -7.8796e-05, -1.033e-05, 3.9826e-05, 4.4095e-08, -0.00010876, 0.00027535, -0.00047962, 0.00069441, -0.00088901, 0.0010329, -0.0010997, 0.0010707, -0.00093726, 0.00070274, -0.00038213, 9.2667e-07, 0.00040753, -0.00080567, 0.0011558, -0.0014246, 0.0015865, -0.0016269, 0.001544, -0.0013486, 0.001063, -0.00071875, 0.00035222, -9.4466e-07, -0.000301, 0.00052689, -0.00066041, 0.00069738, -0.00064599, 0.00052557, -0.00036388, 0.00019342, -4.7097e-05, -4.6149e-05, 6.5266e-05, -2.66e-08, -0.00014737, 0.00036228, -0.00061916, 0.00088455, -0.0011211, 0.0012923, -0.001367, 0.0013236, -0.0011531, 0.00086091, -0.00046627, 9.8692e-07, 0.00049413, -0.00097358, 0.0013923, -0.0017106, 0.001899, -0.0019411, 0.0018359, -0.0015978, 0.0012546, -0.00084459, 0.0004118, -9.3037e-07, -0.00034794, 0.00060398, -0.00074911, 0.00077995, -0.00070792, 0.00055755, -0.00036307, 0.0001639, 6.489e-07, -9.6597e-05, 9.9953e-05, -1.0026e-07, -0.00019845, 0.00047623, -0.00080088, 0.0011309, -0.0014206, 0.0016258, -0.0017097, 0.0016471, -0.0014286, 0.0010624, -0.00057326, 1.0416e-06, 0.00060392, -0.0011861, 0.0016911, -0.0020716, 0.0022927, -0.0023361, 0.0022023, -0.0019098, 0.0014937, -0.0010012, 0.00048562, -9.0789e-07, -0.00040538, 0.00069732, -0.00085481, 0.00087569, -0.0007757, 0.00058615, -0.00034972, 0.00011471, 7.1372e-05, -0.00016818, 0.00014808, -1.7598e-07, -0.00026783, 0.00062999, -0.0010449, 0.0014605, -0.0018202, 0.00207, -0.0021652, 0.0020764, -0.0017939, 0.0013292, -0.00071479, 1.09e-06, 0.000749, -0.0014668, 0.0020854, -0.0025474, 0.0028112, -0.002856, 0.0026838, -0.0023193, 0.0018071, -0.0012058, 0.00058184, -8.7742e-07, -0.0004795, 0.00081673, -0.00098813, 0.00099338, -0.00085414, 0.00061102, -0.00031811, 3.5766e-05, 0.00017743, -0.00027258, 0.00021724, -2.5283e-07, -0.00036613, 0.00084699, -0.0013884, 0.0019235, -0.0023808, 0.0026925, -0.0028032, 0.0026777, -0.0023053, 0.0017028, -0.00091302, 1.1313e-06, 0.00095235, -0.0018602, 0.0026383, -0.0032149, 0.003539, -0.0035857, 0.0033597, -0.0028942, 0.0022467, -0.0014928, 0.00071653, -8.3927e-07, -0.00058263, 0.00098184, -0.0011705, 0.0011509, -0.00095332, 0.00063184, -0.00025711, -9.295e-05, 0.0003436, -0.0004334, 0.00032283, -3.2985e-07, -0.00051517, 0.0011754, -0.0019079, 0.0026239, -0.0032292, 0.0036352, -0.0037706, 0.0035904, -0.0030827, 0.0022716, -0.0012153, 1.1652e-06, 0.0012636, -0.0024635, 0.0034878, -0.0042424, 0.0046612, -0.004713, 0.0044059, -0.0037853, 0.0029292, -0.0019388, 0.0009261, -7.9388e-07, -0.00074296, 0.0012379, -0.0014515, 0.00139, -0.0010971, 0.00064831, -0.00014102, -0.00031833, 0.0006284, -0.00070677, 0.00050173, -4.0605e-07, -0.00076779, 0.001733, -0.0027917, 0.0038186, -0.0046805, 0.0052533, -0.0054367, 0.0051681, -0.0044317, 0.0032624, -0.001744, 1.191e-06, 0.0018128, -0.0035328, 0.0050002, -0.0060802, 0.0066778, -0.0067486, 0.0063039, -0.0054098, 0.0041795, -0.0027597, 0.0013135, -7.4179e-07, -0.0010417, 0.0017161, -0.0019765, 0.0018343, -0.001357, 0.00066024, 0.00010747, -0.00078338, 0.0012123, -0.0012676, 0.00087004, -4.8046e-07, -0.001294, 0.0029021, -0.0046585, 0.0063614, -0.0077948, 0.0087545, -0.0090734, 0.0086431, -0.0074308, 0.0054866, -0.0029425, 1.2084e-06, 0.0030838, -0.0060344, 0.0085778, -0.010478, 0.01156, -0.011737, 0.011013, -0.0094922, 0.0073627, -0.0048781, 0.0023273, -6.8363e-07, -0.0018453, 0.0030211, -0.0034286, 0.003077, -0.0020844, 0.00066746, 0.00088305, -0.0022363, 0.0030626, -0.0030778, 0.0020833, -5.5214e-07, -0.003108, 0.0070329, -0.011428, 0.015837, -0.019739, 0.022596, -0.023918, 0.023316, -0.020556, 0.015597, -0.0086154, 1.2171e-06, 0.0096607, -0.019634, 0.029089, -0.037181, 0.043121, -0.046258, 0.046147, -0.042594, 0.035694, -0.025828, 0.013642, -6.2015e-07, -0.014082, 0.02753, -0.039293, 0.048439, -0.054239, 0.056225, -0.054239, 0.048439, -0.039293, 0.02753, -0.014082, -6.2015e-07, 0.013642, -0.025828, 0.035694, -0.042594, 0.046147, -0.046258, 0.043121, -0.037181, 0.029089, -0.019634, 0.0096607, 1.2171e-06, -0.0086154, 0.015597, -0.020556, 0.023316, -0.023918, 0.022596, -0.019739, 0.015837, -0.011428, 0.0070329, -0.003108, -5.5214e-07, 0.0020833, -0.0030778, 0.0030626, -0.0022363, 0.00088305, 0.00066746, -0.0020844, 0.003077, -0.0034286, 0.0030211, -0.0018453, -6.8363e-07, 0.0023273, -0.0048781, 0.0073627, -0.0094922, 0.011013, -0.011737, 0.01156, -0.010478, 0.0085778, -0.0060344, 0.0030838, 1.2084e-06, -0.0029425, 0.0054866, -0.0074308, 0.0086431, -0.0090734, 0.0087545, -0.0077948, 0.0063614, -0.0046585, 0.0029021, -0.001294, -4.8046e-07, 0.00087004, -0.0012676, 0.0012123, -0.00078338, 0.00010747, 0.00066024, -0.001357, 0.0018343, -0.0019765, 0.0017161, -0.0010417, -7.4179e-07, 0.0013135, -0.0027597, 0.0041795, -0.0054098, 0.0063039, -0.0067486, 0.0066778, -0.0060802, 0.0050002, -0.0035328, 0.0018128, 1.191e-06, -0.001744, 0.0032624, -0.0044317, 0.0051681, -0.0054367, 0.0052533, -0.0046805, 0.0038186, -0.0027917, 0.001733, -0.00076779, -4.0605e-07, 0.00050173, -0.00070677, 0.0006284, -0.00031833, -0.00014102, 0.00064831, -0.0010971, 0.00139, -0.0014515, 0.0012379, -0.00074296, -7.9388e-07, 0.0009261, -0.0019388, 0.0029292, -0.0037853, 0.0044059, -0.004713, 0.0046612, -0.0042424, 0.0034878, -0.0024635, 0.0012636, 1.1652e-06, -0.0012153, 0.0022716, -0.0030827, 0.0035904, -0.0037706, 0.0036352, -0.0032292, 0.0026239, -0.0019079, 0.0011754, -0.00051517, -3.2985e-07, 0.00032283, -0.0004334, 0.0003436, -9.295e-05, -0.00025711, 0.00063184, -0.00095332, 0.0011509, -0.0011705, 0.00098184, -0.00058263, -8.3927e-07, 0.00071653, -0.0014928, 0.0022467, -0.0028942, 0.0033597, -0.0035857, 0.003539, -0.0032149, 0.0026383, -0.0018602, 0.00095235, 1.1313e-06, -0.00091302, 0.0017028, -0.0023053, 0.0026777, -0.0028032, 0.0026925, -0.0023808, 0.0019235, -0.0013884, 0.00084699, -0.00036613, -2.5283e-07, 0.00021724, -0.00027258, 0.00017743, 3.5766e-05, -0.00031811, 0.00061102, -0.00085414, 0.00099338, -0.00098813, 0.00081673, -0.0004795, -8.7742e-07, 0.00058184, -0.0012058, 0.0018071, -0.0023193, 0.0026838, -0.002856, 0.0028112, -0.0025474, 0.0020854, -0.0014668, 0.000749, 1.09e-06, -0.00071479, 0.0013292, -0.0017939, 0.0020764, -0.0021652, 0.00207, -0.0018202, 0.0014605, -0.0010449, 0.00062999, -0.00026783, -1.7598e-07, 0.00014808, -0.00016818, 7.1372e-05, 0.00011471, -0.00034972, 0.00058615, -0.0007757, 0.00087569, -0.00085481, 0.00069732, -0.00040538, -9.0789e-07, 0.00048562, -0.0010012, 0.0014937, -0.0019098, 0.0022023, -0.0023361, 0.0022927, -0.0020716, 0.0016911, -0.0011861, 0.00060392, 1.0416e-06, -0.00057326, 0.0010624, -0.0014286, 0.0016471, -0.0017097, 0.0016258, -0.0014206, 0.0011309, -0.00080088, 0.00047623, -0.00019845, -1.0026e-07, 9.9953e-05, -9.6597e-05, 6.489e-07, 0.0001639, -0.00036307, 0.00055755, -0.00070792, 0.00077995, -0.00074911, 0.00060398, -0.00034794, -9.3037e-07, 0.0004118, -0.00084459, 0.0012546, -0.0015978, 0.0018359, -0.0019411, 0.001899, -0.0017106, 0.0013923, -0.00097358, 0.00049413, 9.8692e-07, -0.00046627, 0.00086091, -0.0011531, 0.0013236, -0.001367, 0.0012923, -0.0011211, 0.00088455, -0.00061916, 0.00036228, -0.00014737, -2.66e-08, 6.5266e-05, -4.6149e-05, -4.7097e-05, 0.00019342, -0.00036388, 0.00052557, -0.00064599, 0.00069738, -0.00066041, 0.00052689, -0.000301, -9.4466e-07, 0.00035222, -0.00071875, 0.001063, -0.0013486, 0.001544, -0.0016269, 0.0015865, -0.0014246, 0.0011558, -0.00080567, 0.00040753, 9.2667e-07, -0.00038213, 0.00070274, -0.00093726, 0.0010707, -0.0010997, 0.0010329, -0.00088901, 0.00069441, -0.00047962, 0.00027535, -0.00010876, 4.4095e-08, 3.9826e-05, -1.033e-05, -7.8796e-05, 0.00020901, -0.00035553, 0.00049065, -0.00058743, 0.00062326, -0.00058293, 0.00046066, -0.00026112, -9.5066e-07, 0.00030232, -0.00061391, 0.00090411, -0.0011425, 0.0013033, -0.0013686, 0.0013302, -0.0011906, 0.00096288, -0.00066894, 0.00033718, 8.6166e-07, -0.00031405, 0.00057511, -0.00076353, 0.00086773, -0.00088598, 0.00082626, -0.00070495, 0.00054445, -0.0003703, 0.00020785, -7.9127e-05, 1.1099e-07, 2.1106e-05, 1.481e-05, -9.8699e-05, 0.00021424, -0.0003402, 0.00045321, -0.00053093, 0.00055495, -0.00051332, 0.00040213, -0.00022629, -9.4842e-07, 0.00025941, -0.00052424, 0.00076882, -0.00096781, 0.0011001, -0.0011512, 0.0011152, -0.00099484, 0.00080186, -0.00055517, 0.00027881, 7.9278e-07, -0.00025787, 0.00047011, -0.0006211, 0.00070197, -0.00071213, 0.00065899, -0.00055679, 0.00042457, -0.00028366, 0.00015495, -5.6262e-05, 1.7331e-07, 7.4699e-06, 3.1845e-05, -0.00010962, 0.00021155, -0.00031946, 0.00041373, -0.00047586, 0.00049092, -0.00044958, 0.0003494, -0.00019528, -9.381e-07, 0.00022178, -0.0004461, 0.00065153, -0.00081704, 0.00092538, -0.00096505, 0.00093165, -0.00082831, 0.00066535, -0.00045902, 0.00022966, 7.2094e-07, -0.00021084, 0.00038257, -0.00050284, 0.00056497, -0.00056916, 0.00052223, -0.00043649, 0.00032804, -0.00021463, 0.00011339, -3.866e-05, 2.3037e-07, -2.203e-06, 4.2562e-05, -0.00011354, 0.00020268, -0.00029454, 0.00037271, -0.00042197, 0.00043031, -0.00039052, 0.00030126, -0.00016728, -9.1997e-07, 0.00018834, -0.00037709, 0.00054851, -0.00068526, 0.00077333, -0.00080367, 0.00077318, -0.00068505, 0.00054834, -0.00037693, 0.00018784, 6.4707e-07, -0.00017113, 0.00030897, -0.00040388, 0.00045092, -0.00045085, 0.00040983, -0.00033843, 0.00025016, -0.00015968, 8.0897e-05, -2.5255e-05, 2.8157e-07, -8.7238e-06, 4.8273e-05, -0.00011193, 0.00018899, -0.00026643, 0.00033064, -0.00036924, 0.00037264, -0.0003354, 0.00025695, -0.0001418, -8.9441e-07, 0.00015836, -0.00031562, 0.00045725, -0.00056909, 0.00063991, -0.00066268, 0.00063531, -0.00056092, 0.00044736, -0.00030636, 0.00015205, 5.7212e-07, -0.00013741, 0.0002468, -0.00032074, 0.00035567, -0.00035273, 0.00031737, -0.00025857, 0.00018751, -0.00011619, 5.577e-05, -1.5254e-05, 3.2642e-07, -1.2707e-05, 4.9981e-05],
// ];

let chirpFilterParameterList = [
    [48000, 32, 17400, 18600],
    [48000, 32, 19400, 20600],
    [48000, 32, 21400, 22600],
];

let chirpFilterList = [];

chirpFilterParameterList.forEach((item) => {
    let bp = fftUtils.createBandPassFilter(item[0], item[1], item[2], item[3]);
    chirpFilterList.push(bp)
})


let chirpFilterParameterList_suzhou = [
    [48000, 32, 17400, 18600],
    [48000, 32, 19400, 20600],
    [48000, 32, 21400, 22600],
];

let chirpFilterList_suzhou = [];

chirpFilterParameterList_suzhou.forEach((item) => {
    let bp = fftUtils.createBandPassFilter(item[0], item[1], item[2], item[3]);
    chirpFilterList_suzhou.push(bp)
})



let inputListTemp = []

let needJudgeNumber = true;
let chirpNum = -1;

// 保留输入的音频数据 一秒， 48000个点
let inputListStore = []

// 标志是否完成时间对齐， 一秒内的信号顺序为1，2，3，4，5
let isTimeAligned = false;
let timeGap = 0.330; // 两个信号时间差大于300，认为
let timeOffset = -1; // 需要偏移多少时间

let currentIndex = null;

function oneDProcessThreeBeacon(inputData) {
    let timeStamp = new Date().getTime();


    // 检测单频信号，切换配置
    Array.prototype.push.apply(SingleDetectList, inputData);
    let tdoaInfo = []
    let tdoaInfo2 = []
    if (SingleDetectList.length > 8192 * 4) {
        let output = new Array(SingleDetectList.length);
        for (let i = 0; i < SingleDetectList.length; i++) {
            output[i] = qb1921filter.filter(SingleDetectList[i]);
        }
        let clusterIndex = beaconCluster1.detectSingleFrequencyWithList(output);
        worker.postMessage({
            'code': 'clusterIndex',
            'clusterIndex': clusterIndex
        })
        // 根据单频更新配置
        if (clusterIndex && clusterIndex.length > 0) {
            if (clusterIndex[0].index != currentIndex) {
                currentIndex = clusterIndex[0].index;
                console.log("更新配置");
                beaconCluster1.updateSettings(allSettings[currentIndex][0]);
                beaconCluster2.updateSettings(allSettings[currentIndex][1]);
                settings1 = JSON.parse(JSON.stringify(allSettings[currentIndex][0]));
                settings2 = JSON.parse(JSON.stringify(allSettings[currentIndex][1]));
            }
        }

        let output1 = new Array(SingleDetectList.length);
        for (let i = 0; i < SingleDetectList.length; i++) {
            output1[i] = qb1719filter.filter(SingleDetectList[i]);
        }
        // 获取tdoa, 改成单声道
        tdoaInfo = beaconCluster1.getTDOAInfoWithList(output1);
        let output2 = new Array(SingleDetectList.length);
        for (let i = 0; i < SingleDetectList.length; i++) {
            output2[i] = qb2123filter.filter(SingleDetectList[i]);
        }
        tdoaInfo2 = beaconCluster2.getTDOAInfoWithList(output2);
        SingleDetectList = [];
    }


    worker.postMessage({
        'code': 'tdoaInfo',
        tdoaInfo,
        tdoaInfo2
    })

    let distanceObj = fftUtils.calculateDistanceThreeBeacon(tdoaInfo, tdoaInfo2, settings1, settings2, 1);

    let lngStart1 = settings1.lngStart;
    let lngEnd1 = settings1.lngEnd;
    let latStart1 = settings1.latStart;
    let latEnd1 = settings1.latEnd;


    let lngStart2 = settings2.lngStart;
    let lngEnd2 = settings2.lngEnd;
    let latStart2 = settings2.latStart;
    let latEnd2 = settings2.latEnd;

    console.log()

    let coord1 = [];
    let coord2 = [];
    distanceObj.distances1.forEach(x => {
        coord1.push(fftUtils.calculateCoordinate(lngStart1, lngEnd1, latStart1, latEnd1, x / settings1.totalLength));
    })

    distanceObj.distances2.forEach(x => {
        coord2.push(fftUtils.calculateCoordinate(lngStart2, lngEnd2, latStart2, latEnd2, x / settings2.totalLength));
    })


    worker.postMessage({
        'code': 'coordinate',
        coordinate1: coord1,
        coordinate2: coord2,
        timeStamp: timeStamp
    })
    worker.postMessage({
        'code': 'distances_nanchang',
        distances1: distanceObj.distances1,
        distances2: distanceObj.distances2,
        timeStamp: timeStamp
    })
}

function oneDProcess(inputData) {
    // 获取tdoa, 改成单声道
    let tdoaInfo = beaconCluster1D.getTDOAInfoWithList(inputData);
    worker.postMessage({
        'code': 'tdoaInfo',
        'tdoaInfo': tdoaInfo
    })
    let location = beaconCluster1D.getDistance(beaconCluster1D.getTimeDelta(tdoaInfo));


    worker.postMessage({
        'code': 'location',
        'location': location,
        'type': '1D'
    })
}

function twoDProcess(tdoaInfo, locations) {
    let timeStamp = new Date().getTime();
    worker.postMessage({
        'code': 'tdoaInfo',
        tdoaInfo,
        // tdoaInfo2
    })

    // 取出所有到达时间
    let tdoas = [];
    tdoaInfo.forEach((item) => {
        if (item.tdoa > 0) {
            tdoas.push(item.tdoa);
        }
    })



    let ranges = [
        [100, -1],
        [100, -1],
        [100, -1]
    ];

    for (let i = 0; i < locations.length; i++) {
        let loc = locations[i];
        for (let j = 0; j < 3; j++) {
            ranges[j][0] = Math.min(ranges[j][0], loc[j]);
            ranges[j][1] = Math.max(ranges[j][1], loc[j]);
        }
    }

    let settings = {
        period: 1.002, // 同一批信号首位间隔时间
        beaconsLocation: locations,
        locations: locations,
        xRange: ranges[0],
        yRange: ranges[1],
        zRange: ranges[2],
        totalLength: Math.max(ranges[0][1] - ranges[0][0], ranges[1][1] - ranges[1][0], ranges[2][1] - ranges[2][0]), // 暂时用x轴  的长度
        lastCoordinate: null,
        radius: 3,
        interval: 0.15,
        precision: 0.05,
    }

    let costStartTime = new Date().getTime();

    let location = fftUtils.calculateLocation(tdoas, settings)

    if ((new Date().getTime() - costStartTime) > 1) {
        console.log("cal costTime", (new Date().getTime() - costStartTime));
    }

    worker.postMessage({
        'code': 'location',
        'location': location
    })
}

function statidumProcess(inputList) {
    inputListTemp.push.apply(inputListTemp, inputList);

    if (inputListTemp.length < sampleFrq) {
        return;
    }

    // 输入到inputListStore, 凑齐一秒的数据
    let leftLength = sampleFrq - inputListStore.length
    console.log("leftLength", leftLength);
    inputListStore.push.apply(inputListStore, inputListTemp.slice(0, leftLength));
    inputListTemp = inputListTemp.slice(leftLength);

    let res1 = getJudgedNumber(inputListStore, signalFilterParameterList, 1);
    let res2 = getJudgedNumber(inputListStore, chirpFilterParameterList, 2);

    console.log(res1.signalMaxAndIndex, res2.signalMaxAndIndex);

    // 保留数据，时间偏移的时候重新把数据放到input
    let inputListStoreKeep = inputListStore.slice(0);

    inputListStore = [];


    if (res1.signalMaxAndIndex.index == res2.signalMaxAndIndex.index) {
        chirpNum = res1.signalMaxAndIndex.index;
    } else if (res1.signalMaxAndIndex.index == 0 && res2.signalMaxAndIndex.index == 2) {
        chirpNum = 2;
    } else {
        let assistList = [];
        for (let i = 0; i < res1.meanList.length; i++) {
            assistList.push(res1.meanList[i] + res2.meanList[i]);
        }
        let assistRes = getMaxAndIndex(assistList);
        chirpNum = assistRes.index;
    }
    console.log(chirpNum);


    let tdoaInfo = frqDetectList[chirpNum].getTDOAInfoWithList(res2.filteredSignalList[chirpNum]);
    tdoaInfo = tdoaInfo.filter(item => item.tdoa > 0);

    console.log("tdoaInfo", tdoaInfo);

    if (tdoaInfo.length < 5) {
        console.log("一秒内tdoa小于5个")
        return;
    }

    // 时间未对齐，先对齐时间
    if (!isTimeAligned) {
        if (tdoaInfo.length == 0) {
            console.log("一秒内未检测到tdoa信号");
            return;
        }
        if (tdoaInfo.length < 5) {
            console.log(tdoaInfo);
            console.log("一秒内tdoa小于5个")
            return;
        }
        let i = 1;
        for (i = 1; i < tdoaInfo.length; i++) {
            let curTdoa = tdoaInfo[i].tdoa;
            let preTdoa = tdoaInfo[i - 1].tdoa;

            // 两个信号间的差值超过 timegap ，表示curTdoa 是这批信号的信号1
            if (curTdoa - preTdoa > timeGap) {
                // 需要偏移的时间，curTdoa 取小数

                timeOffset = fract(curTdoa);
                console.log("时间对齐", timeOffset);
                // 这批信号1 开始的信号插入回inputListStore
                inputListStore.push.apply(inputListStore, inputListStoreKeep.slice((timeOffset - 0.1) * sampleFrq))
                frqDetectList.forEach(item => {
                    item.clear();
                })
                isTimeAligned = true;
                break;
            }
        }
        // 已经对齐
        if (i == tdoaInfo.length && !isTimeAligned) {

            isTimeAligned = true;
        }
        if (isTimeAligned) {
            console.log('时间已经对齐');
        }
        return;
    }


    // 取出所有到达时间
    let tdoas = [];
    tdoaInfo.forEach((item) => {
        if (item.tdoa > 0) {
            tdoas.push(item.tdoa);
        }
    })


    let location = fftUtils.calculateLocation(tdoas, locationSettingList[chirpNum]);

    console.log('location', location);
    // location[3] 误差， 如果误差太大说明，这批信号到达时间中有几个是有问题的。
    if (location && location[3] < 10) {
        worker.postMessage({
            'code': 'location',
            'location': location
        })
    }
        // }
}

// 苏州定位
function suzhouProcess(inputList) {
    inputListTemp.push.apply(inputListTemp, inputList);

    if (inputListTemp.length < sampleFrq) {
        return;
    }

    // 输入到inputListStore, 凑齐一秒的数据
    let leftLength = sampleFrq - inputListStore.length
    console.log("leftLength", leftLength);
    inputListStore.push.apply(inputListStore, inputListTemp.slice(0, leftLength));
    inputListTemp = inputListTemp.slice(leftLength);





    // 滤波    17-19 二维区域， 19-21 二维区域， 21-23 一维区域
    let res = filterSignal_suzhou(inputListStore, chirpFilterParameterList);


    // 保留数据，时间偏移的时候重新把数据放到input
    let inputListStoreKeep = inputListStore.slice(0);

    inputListStore = [];

    // 左上二维区域
    // 中上二维区域
    // 中下一维区域
    let allTdoaList = [];
    frqDetectList_suzhou.forEach((detect, index) => {
        let tdoaX = detect.getTDOAInfoWithList(res.filteredSignalList[index]);
        tdoaX = tdoaX.filter(item => item.tdoa > 0);
        allTdoaList.push(tdoaX);
    });

    let locations = [];

    allTdoaList.forEach((tdoaInfo, index) => {
        if (index == 0 || index == 1) {
            // 取出所有到达时间
            let tdoas = [];
            tdoaInfo.forEach((item) => {
                if (item.tdoa > 0) {
                    tdoas.push(item.tdoa);
                }
            })
            console.log(index,index, tdoas);
            let tdoaTimeList = tdoas.map
            // console.log("locationSettingList_suzhou[index]", locationSettingList_suzhou[index]);
            for (let i = 0; i < tdoas.length; i++) {
                let location = fftUtils.calculateLocation([tdoas[i]], locationSettingList_suzhou[index], index);
                console.log(index,index,'location', location);
                // location[3] 误差， 如果误差太大说明，这批信号到达时间中有几个是有问题的。
                if (location && location[3] < 10) {
                    if(locations.length > 0) {
                        if (location[3] < locations[0][3]) {
                            locations[0] = location
                        }
                    } else {
                        locations.push(location);
                    }
                } else if (location) {
                    console.log("位置误差太大", location);
                }
            }
        } else if(index == 2) {
            let fftutil1d = frqDetectList_suzhou[index];
            let tdoas = tdoaInfo;
            console.log("p22", tdoas);
            let distances = fftutil1d.getDistance(fftutil1d.getTimeDelta(tdoas));
            if (distances && distances.length > 0) {
                let setting1d = frequenceSettingList_suzhou[2];
                let res = fftUtils.calculateCoordinate(setting1d.lngStart, setting1d.lngEnd, setting1d.latStart, setting1d.latEnd, distances[0] / setting1d.totalLength)
                locations.push([res.lng, res.lat]);
            }
        }
    })

    worker.postMessage({
        'code': 'location',
        'location': locations,
        'type': "suzhou"
    })

}

worker.onMessage((res) => {
    switch (res.code) {
        case 'frameBuffer1DThreeBeacon':
            {
                console.log(" settings1:" + settings1 + ", settings2:" + settings2);
                if (!settings1 || !settings2) {
                    console.log("请先设置配置");
                    break;
                }
                console.log("当前输入");
                let frameBuffer = res.data;
                let inputList = fftUtils.getSingleLeftFromArrayStatic(frameBuffer)
                oneDProcessThreeBeacon(inputList);
                break;
            }
        case 'frameBuffer1D':
            {
                let frameBuffer = res.data;
                let inputList = fftUtils.getSingleLeftFromArrayStatic(frameBuffer)
                oneDProcess(inputList);
                break;
            }
        case 'frameBuffer2d':
            {
                // if (!settings1 || !settings2) {
                //     console.log("请先设置配置");
                //     break;
                // }

                let frameBuffer = res.data;
                let chartData = res.chartData.data;
                // 获取tdoa, 改成单声道
                let inputList = fftUtils.getSingleLeftFromArrayStatic(frameBuffer);
                let tdoaInfo = beaconCluster2D.getTDOAInfoWithList(inputList);

                // x, y, z
                let locations = [];
                let tmpZ = 2;
                for (let i = 0; i < chartData.length; i++) {
                    locations.push([...chartData[i], tmpZ]); // x, y, tmpZ
                }


                twoDProcess(tdoaInfo, locations)

                break;
            }
        case 'frameBuffer_stadium':
            {
                let frameBuffer = res.data;
                let inputList = fftUtils.getSingleLeftFromArrayStatic(frameBuffer);
                statidumProcess(inputList);
                break;
            }
        case 'frameBuffer_suzhou':
            {
                let frameBuffer = res.data;
                let inputList = fftUtils.getSingleLeftFromArrayStatic(frameBuffer);
                suzhouProcess(inputList);
                break;
            }
        case 'inputDataList': // 处理（双声道, 48000 采样）音频文件的直接输入
            {
                let inputData = fftUtils.getSingleLeftFromList(res.data);
                let locType = res.locType;

                if (locType == "一维定位三基站") {
                    oneDProcessThreeBeacon(inputData);
                } else if (locType == "一维定位") {
                    oneDProcess(inputData);
                } else if (locType == "二维定位") {
                    let chartData = res.chartData.data;
                    // 获取tdoa, 改成单声道
                    let tdoaInfo = beaconCluster2D.getTDOAInfoWithList(inputData);

                    // x, y, z
                    let locations = [];
                    let tmpZ = 2;
                    for (let i = 0; i < chartData.length; i++) {
                        locations.push([...chartData[i], tmpZ]); // x, y, tmpZ
                    }

                    twoDProcess(tdoaInfo, locations);
                } else if (locType == "体育馆定位") {
                    statidumProcess(inputData);
                    break;
                } else if (locType == "苏州定位") {
                    let inputData_suzhou = fftUtils.getSingleFromList(res.data);
                    suzhouProcess(inputData_suzhou);
                    break;
                }
                break;
            }
            // 刷新配置
        case 'updateSetting':
            let locType = res.locType;
            console.log(res);
            if (locType == "一维定位三基站") {
                if(res.allSettings) {
                    allSettings = res.allSettings;
                    beaconCluster1.updateSettings(allSettings[0][0]);
                    beaconCluster2.updateSettings(allSettings[0][1]);
                    settings1 = allSettings[0][0];
                    settings2 = allSettings[0][1];
                } else {
                    beaconCluster1.updateSettings(res.beaconCluster1);
                    beaconCluster2.updateSettings(res.beaconCluster2);
                    settings1 = res.beaconCluster1;
                    settings2 = res.beaconCluster2;
                }
            } else if (locType == "一维定位") {
                beaconCluster1D.updateSettings(res.beaconCluster1D);
                settings1D = res.beaconCluster1D;
            } else if (locType == "二维定位") {
                beaconCluster2D.updateSettings(res.beaconCluster2D);
                settings2D = res.beaconCluster2D;
            } else if (locType == "苏州定位") {
                // 设置二维基站位置参数
                console.log("苏州定位", res.setting);
                let coordinateList = res.setting.coordinate;
                locationSettingList_suzhou = [];
                let locations1 = []
                for (let i = 0; i < 4; i++) {
                    if (coordinateList[i].length <= 2) {
                        coordinateList[i].push(1.5);
                    }
                    let t = coordinateList[i].slice(0);
                    locations1.push(t);
                }
                console.log("location1", locations1);
                locationSettingList_suzhou.push(getLocationSetting(locations1))

                let locations2 = []
                for (let i = 4; i < 8; i++) {
                    if (coordinateList[i].length <= 2) {
                        coordinateList[i].push(1.5);
                    }
                    let t = coordinateList[i].slice(0);
                    locations2.push(t);
                }

                locationSettingList_suzhou.push(getLocationSetting(locations2))
                console.log("locationSettingList_suzhou", locationSettingList_suzhou);
                // 更新一维定位的长度参数
                frequenceSetting3_suzhou.totalLength = Math.abs(coordinateList[8][0] - coordinateList[9][0]);
                frequenceSetting3_suzhou.lngStart = coordinateList[8][0];
                frequenceSetting3_suzhou.lngEnd = coordinateList[9][0];
                frequenceSetting3_suzhou.latStart = coordinateList[8][1];
                frequenceSetting3_suzhou.latEnd = coordinateList[9][1];
                frqDetectList_suzhou[2].updateSettings(frequenceSetting3_suzhou);
            }

            break;
        default:
            break;
    }
})

function getMaxAndIndex(a) {
    if (!a || a.length == 0) {
        return {
            index: -1,
            max: -1
        }
    }
    let indexOfMax = 0;
    let tempMax = a[0];
    for (let i = 0; i < a.length; i++) {
        if (a[i] > tempMax) {
            tempMax = a[i];
            indexOfMax = i;
        }
    }

    return {
        "index": indexOfMax,
        "max": tempMax
    }
}

function getAbsMean(a) {
    let sum = 0;
    for (let i = 0; i < a.length; i++) {
        sum += Math.abs(a[i]);
    }
    let mean = sum / a.length;

    return mean;
}

// 判断区域编号, type 1 使用单频滤波器，type 2 使用chirp滤波器
function getJudgedNumber(signal, filterParameterList, type = 1) {
    let res = {};
    // 滤波后的信号
    let filteredSignalList = [];

    // filterParameterList.forEach(prameter => {
    //     filteredSignalList.push(fftUtils.FIRFilter(signal, prameter));
    // })
    // console.log("切比雪夫");
    if (type == 1) {
        signalFilterList.forEach((bp) => {
            let output = new Array(signal.length);
            for (let i = 0; i < signal.length; i++) {
                output[i] = bp.filter(signal[i]);
            }
            filteredSignalList.push(output);
        })
    } else if (type == 2) {
        chirpFilterList.forEach((bp) => {
            let output = new Array(signal.length);
            for (let i = 0; i < signal.length; i++) {
                output[i] = bp.filter(signal[i]);
            }
            filteredSignalList.push(output);
        })
    }

    // 暂存平均值
    let filteredSignalMeanList = [];


    for (let i = 0; i < filteredSignalList.length; i++) {
        filteredSignalMeanList.push(getAbsMean(filteredSignalList[i]));
    }

    let signalMaxAndIndex = getMaxAndIndex(filteredSignalMeanList);
    res.signalMaxAndIndex = signalMaxAndIndex;
    res.meanList = filteredSignalMeanList;
    res.filteredSignalList = filteredSignalList
    return res;
}

function filterSignal_suzhou(signal, filterParameterList) {
    let res = {};
    // 滤波后的信号
    let filteredSignalList = [];

    chirpFilterList_suzhou.forEach((bp) => {
        let output = new Array(signal.length);
        for (let i = 0; i < signal.length; i++) {
            // output[i] = bp.filter(signal[i]);
            output[i] = signal[i];
        }
        filteredSignalList.push(output);
    })
    res.filteredSignalList = filteredSignalList;
    return res;
}

// 取数值小数
function fract(num) {
    return num - Math.trunc(num);
}

function getLocationSetting(locations) {
    // x, y, z

    let ranges = [
        [100, -1],
        [100, -1],
        [100, -1]
    ];

    for (let i = 0; i < locations.length; i++) {
        let loc = locations[i];
        for (let j = 0; j < 3; j++) {
            ranges[j][0] = Math.min(ranges[j][0], loc[j]);
            ranges[j][1] = Math.max(ranges[j][1], loc[j]);
        }
    }

    let settings = {
        period: 1.002, // 同一批信号首位间隔时间
        beaconsLocation: locations,
        locations: locations,
        xRange: ranges[0],
        yRange: ranges[1],
        zRange: ranges[2],
        totalLength: Math.max(ranges[0][1] - ranges[0][0], ranges[1][1] - ranges[1][0], ranges[2][1] - ranges[2][0]), // 暂时用x轴  的长度
        lastCoordinate: null,
        radius: 3,
        interval: 0.15,
        precision: 0.1,
    }
    return settings;
}
